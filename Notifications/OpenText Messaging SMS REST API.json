{
  "openapi": "3.0.1",
  "info": {
    "description": "# Authentication\nHTTP Basic authentication is used for all requests.\n",
    "title": "OpenText Messaging SMS REST API",
    "version": "V1"
  },
  "servers": [
    {
      "url": "https://api.us.cloudmessaging.opentext.com",
      "description": "Production North America"
    },
    {
      "url": "https://api.eu.cloudmessaging.opentext.com",
      "description": "Production EMEA"
    },
    {
      "url": "https://t2api.us.cloudmessaging.opentext.com",
      "description": "Pre-production"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "description": "",
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "SmsRequest": {
        "type": "object",
        "required": [
          "destinations",
          "sms_text"
        ],
        "properties": {
          "options": {
            "type": "object",
            "description": "This contains all processing options for the job.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Options"
              }
            ]
          },
          "reports": {
            "type": "object",
            "description": "This contains the specification of any reports that are required by the job. If *reports* is present, only those reports specified will be generated - the openText messaging API will not automatically request any additional report. If *reports* is not present, the system will act based on the user profile.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Reports"
              }
            ]
          },
          "destinations": {
            "type": "array",
            "description": "It contains one or more recipients phone numbers.\n",
            "items": {
              "$ref": "#/components/schemas/SmsDestination"
            }
          },
          "sms_text": {
            "type": "string",
            "description": "sms_text contains text data to be sent to recipient destination phone number.\n",
            "example": "This is sample SMS text data"
          }
        },
        "title": "SmsRequest"
      },
      "Options": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "example": "temp_message_id",
            "description": "A client-supplied globally unique identifier of no more than 80 characters used to help prevent duplicate requests. A case-insensitive comparison is used to determine a duplicate value.\n"
          },
          "billing_code": {
            "type": "string",
            "example": "temp_billing_code",
            "description": "A client-supplied string of up to 255 characters that can appear on an invoice.\n"
          },
          "customer_reference": {
            "type": "string",
            "example": "temp_customer_reference",
            "description": "A client-supplied metadata string of up to 255 characters.\n"
          }
        },
        "title": "Options"
      },
      "Reports": {
        "type": "object",
        "properties": {
          "delivery_report": {
            "$ref": "#/components/schemas/GenericReport"
          },
          "final_report": {
            "$ref": "#/components/schemas/GenericReport"
          },
          "progress_report": {
            "$ref": "#/components/schemas/ProgressReport"
          }
        },
        "title": "Reports"
      },
      "GenericReport": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "summary",
              "detail",
              "exception",
              "conditional"
            ],
            "description": "Specifies the type of report to be generated.Supported report types are summary,detail,exception and conditional.\n"
          },
          "report_destinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDest"
            }
          }
        },
        "title": "GenericReport"
      },
      "ProgressReport": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "summary",
              "detail",
              "exception",
              "conditional"
            ],
            "description": "Specifies the type of report to be generated.Supported report types are summary,detail,exception and conditional.\n"
          },
          "intervals": {
            "type": "string",
            "example": "5 10 15 20",
            "pattern": "^[\\\\d+][\\\\s\\\\d]*$",
            "description": "This value is a space-separated list of numbers indicating the intervals, in minutes, between progress report generation. For example, the value of \"5 10 15 11\" indicates that the first report should be generated 5 minutes after the base time indicated by the ProgressReportBase element, another one 10 minutes later, the third one 15 minutes after the second one, etc.\n  \n  Unless these intervals are set in the user's profile, this element is required to actually get progress reports.\n"
          },
          "report_destinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDest"
            }
          }
        },
        "title": "ProgressReport"
      },
      "_email": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "email": "example@org.com"
        },
        "description": "Contains report destination for email address type.\n"
      },
      "_url": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "description": "Contains report destination for URL address type URL maximum length is configurable through application properties file.Allowed default length is 255 bytes.\n"
        },
        "example": {
          "url": "http://data.example.com"
        }
      },
      "ReportDest": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/_email"
          },
          {
            "$ref": "#/components/schemas/_url"
          }
        ],
        "additionalProperties": false,
        "title": "ReportDest"
      },
      "SmsDestination": {
        "type": "object",
        "required": [
          "sms"
        ],
        "properties": {
          "ref": {
            "type": "string",
            "example": "ref001",
            "description": "A client-supplied string of up to 20 characters used to identify the recipient.\n"
          },
          "sms": {
            "type": "string",
            "example": "1234567891",
            "description": "The recipient phone number. \n"
          },
          "inserts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Insert"
            }
          }
        },
        "title": "SmsDestination"
      },
      "Insert": {
        "type": "object",
        "required": [
          "id",
          "value"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "An integer between 1 and 999 indicating the ordinal value of the insert.\n"
          },
          "value": {
            "type": "string",
            "example": "destination_insert_value",
            "description": "A client-supplied string of up to 255 characters.\n"
          }
        },
        "title": "Insert"
      },
      "SmsSubmitResponse": {
        "type": "object",
        "required": [
          "job_id"
        ],
        "properties": {
          "job_id": {
            "type": "string",
            "example": "xsi-1234567",
            "description": "Unique job identifier\n"
          }
        },
        "title": "SmsSubmitResponse"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error_code",
          "error_message"
        ],
        "properties": {
          "error_code": {
            "type": "string"
          },
          "error_message": {
            "type": "string"
          }
        },
        "title": "ErrorResponse"
      },
      "SmsDeliveryDetails": {
        "type": "array",
        "required": [
          "sms"
        ],
        "items": {
          "properties": {
            "ref_base64": {
              "type": "string",
              "example": "RkFYT1VU",
              "description": "A client-supplied string of up to 20 characters in base64 encoded format used to identify the recipient.\n"
            },
            "sms": {
              "type": "string",
              "example": "1234567891",
              "description": "The recipient SMS number. US domestic numbers should use the following format: '2025550123'. International numbers should use the following format: '+44123456789'.\n"
            },
            "delivery_attempts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SmsDeliveryAttempts"
              }
            },
            "events": {
              "$ref": "#/components/schemas/Events"
            }
          }
        },
        "title": "DeliveryDetails"
      },
      "SmsJobState": {
        "type": "string",
        "enum": [
          "AwaitingSetup",
          "Setup",
          "Processing",
          "AwaitingDelivery",
          "Delivering",
          "Posted",
          "Delivered",
          "Reporting",
          "Complete",
          "Error",
          "Cancelled",
          "Held",
          "Preview",
          "Paused",
          "AwaitingCompliance",
          "Purged"
        ],
        "description": "JobState can have many different values, but the key ones that relate to the overall state of the job are below.Also note that it is possible for more than one of these states to be seen together (for instance, Processing and Error could show up at the same time, indicating an error in the processing step): *`AwaitingSetup` - job has been received but has not yet started the setup process. *`Setup` - Job is in the midst of initial processing. *`Processing` - Setup has completed and the system is performing the needed steps to prepare for delivery . *`AwaitingDelivery` - Processing is complete, and the job is ready to deliver.This state is usually seen for scheduled jobs, where the delivery is to happen in the future. *`Delivering`- The job is actively delivering the content. *`Posted` - Delivery is complete.The job may still be in process to wait for future events (like email bouncebacks) and/or to generate a report. *`Delivered` - Essentially the same as posted. *`Reporting` - A report is being generated. *`Complete` - The job (including any reporting included) is complete. *`Error` - There is an error that is preventing the job from processing. *`Cancelled` - A request has been made to cancel the job.This state does not indicate that the cancellation has fully finished though.The way to confirm that is to make sure the Complete state is also included. *`Held` - The job has been held and is not processing.  This usually occurs as a result of usage quotas imposed by the finance/credit departments."
      },
      "SmsDeliveryAttempts": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "Sent",
              "Pending",
              "Submitted",
              "InProcess",
              "Error",
              "Cancelled",
              "Held",
              "Expired"
            ],
            "description": "Item level states show the status of the delivery of a particular items.You would see these states in SmsStatus response.  Although there are 8 different possible states, some of them almost never occur: *`Pending` - Item is awaiting delivery.   *`Submitted` - Should be treated as Pending, but this is not a state that I have ever seen in actual use. *`InProcess` - Item is actively being delivered.  This state is very rarely if ever used. *`Error` - An error has occured in attempting to delivery this item.  The item is not actively being attempted, although subsequent retry logic could cause it to be re-attempted.  When you see this state, you should also investigate the \"gammacode\" attribute of the item to see why it failed - the document available in link https://apiforums.easylink.com/system/files/gammacodes.pdf explains the different gamma codes. *`Cancelled` - Delivery of the item was cancelled before delivery was attempted.This could occur because of a problem with the destination address (e.g. an email address in an invalid format), an address block, or a user-initiated cancellation of the job.  As above, the \"gamma code\" attribute gives more details on the reason for the cancellation. *`Held` - The item's delivery is on hold.  This is another state that rarely if ever occurs. *`Sent` - The item was successfully sent.This is what we want to see! *`Expired` - The item was not attempted before the job expired.  Jobs can expire due to the specification of an expiration time, or also due to blackout restrictions (preventing delivery of voice jobs after certain times of day)."
          },
          "gamma_code": {
            "type": "integer",
            "example": 5000,
            "description": "A code that may provide more detailed status information, mainly applicable to the Error state.A list of codes and their respective meanings can be found in below link https://apiforums.easylink.com/system/files/gammacodes.pdf.\n"
          },
          "first_attempt": {
            "type": "string",
            "format": "date-time",
            "example": "2020-04-21T10: 51: 00.000Z",
            "description": "The date/time of the first delivery attempt (ISO 8601 format).\n"
          }
        },
        "title": "DeliveryData"
      },
      "SmsStatusResponse": {
        "type": "object",
        "required": [
          "job_id",
          "job_state"
        ],
        "properties": {
          "job_id": {
            "type": "string",
            "example": "xsi-1234567",
            "description": "Unique job identifier.\n"
          },
          "billing_code_base64": {
            "type": "string",
            "format": "byte",
            "example": "dGVtcF9iaWxsX2NvZGU=",
            "description": "A client-supplied string of up to 255 characters in base64 encoded format that can appear on an invoice.\n"
          },
          "customer_reference_base64": {
            "type": "string",
            "format": "byte",
            "example": "bXJhX2N1c3RfcmVm",
            "description": "A client-supplied metadata string of up to 255 characters in base64 encoded format.\n"
          },
          "entry_time": {
            "type": "string",
            "format": "date-time",
            "example": "2020-04-21T10:50:51.000Z",
            "description": "The date/time job entered the system. (ISO 8601 format).\n"
          },
          "job_state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsJobState"
            },
            "minItems": 1,
            "uniqueItems": true,
            "example": [
              "Complete",
              "Posted"
            ]
          },
          "deliveries": {
            "$ref": "#/components/schemas/SmsDeliveryDetails"
          }
        }
      },
      "Events": {
        "type": "object",
        "properties": {
          "sms_delivery_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsDeliveryEvents"
            }
          }
        }
      },
      "SmsDeliveryEvents": {
        "type": "object",
        "required": [
          "sms"
        ],
        "properties": {
          "event_time": {
            "type": "string",
            "format": "date-time",
            "example": "2020-04-21T10:50:51.000Z",
            "description": "The time the request was received for processing.\n"
          },
          "status": {
            "type": "string",
            "example": "Rejected",
            "enum": [
              "Confirmed",
              "Submitted",
              "Buffered",
              "Delivered",
              "Enroute",
              "Rejected",
              "Failed"
            ],
            "description": "The status of the SMS job.\n"
          },
          "message": {
            "type": "string",
            "example": "4503:Permanent:sa:No operator found for current Destination",
            "description": "Additional message regarding the status of SMS when the status is rejected or failed.\n"
          },
          "tags": {
            "type": "string",
            "example": "",
            "description": "The tags associated with the SMS.\n"
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "Send SMS"
    },
    {
      "name": "Obtaining SMS status",
      "description": "Once a request to send SMS has been successfully accepted and a job ID is returned, users can obtain information i.e., status of the job as it is being processed by the OpenText messaging service.\n\n  There are two ways to obtain SMS status.\n\n  1.  Using the status method /outbound/SMS/status as described in the section \"Get SMS status\".\n  2.  Via a callback mechanism (webhook).\n"
    },
    {
      "name": "SMS Status"
    },
    {
      "name": "Receive SMS status via callback URL (SMS status webhook)",
      "description": "Users can receive status for a submitted SMS request via a callback URL.\n\n  There are two ways to set the callback URL:\n\n  1. Set the URL parameter for report destinations when submitting SMS requests using the method /outbound/SMS. Refer to the section \"Send SMS\" in this document.\n\n  2. Set the callback URL in the account profile by contacting customer support.\n\n  When the callback URL is set via either of these methods, OpenText messaging service will post SMS status as application/json to this end point.\n\n  The schema is the same as in the response from \"Get SMS status\" method except that the values of \"job_state\" parameter will not include \"complete\" even if all deliveries are complete.\n\n  Note that account level setting will post SMS status to the URL for all submitted SMS requests. However, setting the URL when submitting SMS request via /outbound/SMS method will override the account level callback URL setting only for that request.\n"
    },
    {
      "name": "Details on callbackURL",
      "description": "# Authentication for callback URL\n\n  We support basic authentication and digest authentication for callback URLs. If you provide username and password, the OpenText messaging service will use them when making requests.\n\n# Polling versus using callbacks (webhooks) for getting SMS status\n\n  One can obtain SMS status either via polling or via callback mechanism. There are pros and cons with each method. For example, polling can get status relatively quicker, but it requires sending many requests to the messaging service which can impact performance. Excessive polling can result in imposing rate limits by the OpenText messaging service to customer accounts to minimize performance impact. On the other hand, callback mechanism avoids such issues but requires a receiver setup by customers.\n\n# Retry mechanism for webhook\n\n  The OpenText messaging service utilizes a robust mechanism when pushing SMS status to your webhook URL. Our default retry algorithm works as outlined below. Note that attempt to alternate will be skipped if it is not configured.\n  1. Attempt primary\n  2. Retry primary – after 10 mins\n  3. Retry primary – after another 10 mins\n  4. Attempt alternates\n  5. Retry alternate – after 10 mins\n  6. Retry alternate – after 10 mins\n  7. Wait for 1 min\n  8. Attempt primary\n  9. Retry primary – after 10 mins\n  10. Retry primary – after another 10 mins\n  11. Attempt alternates\n  12. Retry alternate – after 10 mins\n  13. Retry alternate – after 10 mins\n  14. Wait for 2 min\n  15. Retry primary – after 10 mins\n  16. Retry primary – after another 10 mins\n  17. Attempt alternates\n  18. Retry alternate – after 10 mins\n  19. Retry alternate – after 10 mins\n  20. Wait for 20 mins\n  21. Retry primary – after 10 mins\n  22. Retry primary – after another 10 mins\n  23. Attempt alternates\n  24. Retry alternate – after 10 mins\n  25. Retry alternate – after 10 mins\n\n# SMS replies\n\n  SMS replies can be pushed to customer URL. Contact customer support to modify profile settings. Here is the JSON schema for SMS replies.\n  \n ``` \n  [\n  \n    {\n    \n      \"id\" : \"1\",\n      \n      \"arrival_time\" : \"2020-01-01T00:00:00Z\",\n      \n      \"source_address\" : \"3158675309\",\n      \n      \"destination_address\" : \"55555\",\n      \n      \"text\" : \"Test message\"\n    }\n    \n  ] \n  ```\n  \n  **id** : unique identifier for the message\n\n  **arrival_time** : the date/time OpenText received the response (ISO 8601 format)\n\n  **source_address** : the [mobile] number that originated (sent) the message\n\n  **destination_address** : the [mobile] number that received the message\n\n  **text** : the message text\n\n  Note: Id’s are only unique within the context of a user account and the short/long code receiving the message.  The value is currently the string representation of a monotonically increasing counter, however, OpenText reserves the right to change this in the future.  For this reason, a suggested minimum length for this field is varchar (40).\n"
    }
  ],
  "paths": {
    "/mra/v1/outbound/sms": {
      "post": {
        "tags": [
          "Send SMS"
        ],
        "summary": "Submit SMS request",
        "description": "Submitting a request to send SMS requires use of pure JSON request body wherein the SMS metadata (recipient SMS address and user-specified options) and text to be sent in SMS are part of the same JSON construct.",
        "parameters": [
          {
            "name": "X-MRA-SubmitId",
            "in": "header",
            "description": "A client-supplied string to identify request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MRA-ProcessingID": {
                "schema": {
                  "type": "string"
                },
                "description": "A String that uniquely identifies a request (created by application)."
              },
              "X-MRA-SubmitId": {
                "schema": {
                  "type": "string"
                },
                "description": "A client-supplied unique identifier,returned in response if provided in request."
              },
              "X-MRA-Duplicate-MessageId": {
                "schema": {
                  "type": "string"
                },
                "description": "Returned processing id of message_id , if it is previously used."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsSubmitResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mra/v1/outbound/sms/status/": {
      "get": {
        "tags": [
          "SMS Status"
        ],
        "summary": "Get SMS status",
        "deprecated": false,
        "description": "Once SMS request has been successfully accepted and a job ID is returned, this method allows users to request the information about the “job” as it is being processed by the OpenText messaging service.",
        "parameters": [
          {
            "name": "X-MRA-SubmitId",
            "in": "header",
            "description": "A client-supplied string to identify request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_id",
            "in": "query",
            "description": "A string consists of “xdn-mrn”.Where xdn is domain name and mrn is job number.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "xsi-1234567"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Start time to begin identifying specific details for the job (ISO 8601 format).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "With Time Zone": {
                "value": "2020-08-10T12:00:00-05:00"
              },
              "Without Time Zone": {
                "value": "2020-08-10T17:00:00Z"
              }
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "End time to end identifying specific details for the job (ISO 8601 format).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "With Time Zone": {
                "value": "2020-08-10T12:00:00-05:00"
              },
              "Without Time Zone": {
                "value": "2020-08-10T17:00:00Z"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MRA-ProcessingID": {
                "schema": {
                  "type": "string"
                },
                "description": "A String that uniquely identifies a request (created by application)."
              },
              "X-MRA-SubmitId": {
                "schema": {
                  "type": "string"
                },
                "description": "A client-supplied unique identifier, returned in response if provided in request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}