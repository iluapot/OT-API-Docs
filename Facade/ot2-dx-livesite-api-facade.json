{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Generated server url"
    },
    {
      "url": "dxls/api/v1",
      "description": "kubernetes server url"
    },
  ],
  "tags": [
    {
      "name": "Content Metadata Service Facade",
      "description": "Handles storage and retrieval of metadata for Content Manager via the Content Metadata Service OT2 API"
    }
  ],
  "paths": {
    "/workflows": {
      "post": {
        "tags": [
          "workflow-controller"
        ],
        "operationId": "startGithubIngest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitHubData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/{apiPathType}": {
      "get": {
        "tags": [
          "livesite-facade-controller"
        ],
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "excludedFields",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tags",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "apiPathType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "livesite-facade-controller"
        ],
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/members/{userId}/tasks": {
      "get": {
        "tags": [
          "member-controller"
        ],
        "operationId": "listTasks",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskWrapperCollection"
                }
              }
            }
          }
        }
      }
    },
    "/id/{id}": {
      "get": {
        "tags": [
          "livesite-facade-controller"
        ],
        "operationId": "getDcrById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludedFields",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/content-items/{volume}/items": {
      "get": {
        "tags": [
          "Content Metadata Service Facade"
        ],
        "summary": "Retrieve all content items for a given volume",
        "description": "Retrieves the current version of all content items within a given volume.",
        "operationId": "listContentItems",
        "parameters": [
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSCollectionWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Invalid volume specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unable to create content item for type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content-items/{volume}/items/{id}": {
      "get": {
        "tags": [
          "Content Metadata Service Facade"
        ],
        "summary": "Retrieve a specific content item for a given volume",
        "description": "Retrieves the current version of a specified content item within a given volume. A match is required on both the id and the volume to return a value",
        "operationId": "getContentItem",
        "parameters": [
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSCollectionWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Item not present in specified volume",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid volume specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unable to create content item for type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/author/{apiPathType}": {
      "get": {
        "tags": [
          "livesite-facade-author-controller"
        ],
        "operationId": "getCaseStudies",
        "parameters": [
          {
            "name": "excludedFields",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "apiPathType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/author/id/{id}": {
      "get": {
        "tags": [
          "livesite-facade-author-controller"
        ],
        "operationId": "getDcrById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludedFields",
            "in": "header",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/author/environments": {
      "get": {
        "tags": [
          "livesite-facade-author-controller"
        ],
        "operationId": "getEnvironments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/author/asset": {
      "get": {
        "tags": [
          "livesite-facade-author-controller"
        ],
        "operationId": "getAsset",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/asset": {
      "get": {
        "tags": [
          "livesite-facade-controller"
        ],
        "operationId": "getAsset_1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GitHubData": {
        "type": "object",
        "properties": {
          "sha": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "download_url": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "variables": {
            "type": "object"
          }
        }
      },
      "TaskWrapperCollection": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "CMSCollectionWrapper": {
        "type": "object",
        "properties": {
          "contentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentItem"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        }
      },
      "ContentItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Paging": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
