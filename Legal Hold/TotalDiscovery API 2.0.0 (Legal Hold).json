{
    "openapi": "3.0.1",
    "info": {
        "title": "TotalDiscovery API",
        "description": "TotalDiscovery use a classic REST/JSON model for our API. It uses easily understood resource-based routes that allow the URL to be a natural part of the user experience. It also uses a straightforward API token authentication model to make it easy and safe to get started right away. All request will return to you in JSON format including errors.\n\nUsing these API's, one can operate on important resources like Matters, Collections, Custodians, LegalHolds\n\n**We are working hard create a better API experience across our entire app, but right now this version is a bit in flux.**\n\nLet us know if you have issues or questions by contacting support.",
        "contact": {
            "name": "support",
            "email": "support@totaldiscovery.com"
        },
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://app.totaldiscovery.com/t/{short_name}/api/v2"
        }
    ],
    "security": [
        {
            "X-AUTH-TOKEN": []
        }
    ],
    "tags": [
        {
            "name": "Collections"
        },
        {
            "name": "Folders"
        },
        {
            "name": "Matters"
        },
        {
            "name": "Custodians Legal Holds"
        },
        {
            "name": "Custodians Legal Holds Notes"
        },
        {
            "name": "Events"
        },
        {
            "name": "Legal Holds"
        },
        {
            "name": "Matter Contacts"
        },
        {
            "name": "Custodians"
        },
        {
            "name": "Export Jobs"
        },
        {
            "name": "Export Destinations"
        },
        {
            "name": "Legal Hold Build Properties"
        },
        {
            "name": "Custom Fields"
        }
    ],
    "paths": {
        "/events/types": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all Event Types",
                "operationId": "GET_events-types",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event-type"
                                            }
                                        }
                                    },
                                    "description": "ID of this subscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_events-types",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/events/webhooks": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all Webhooks",
                "operationId": "GET_events-webhooks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/webhook"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_events-webhooks",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a Webhook",
                "operationId": "POST_events-webhooks",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "data"
                                ],
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "required": [
                                            "attributes",
                                            "type"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "webhooks"
                                                ]
                                            },
                                            "attributes": {
                                                "required": [
                                                    "secret",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": {
                                        "type": "webhooks",
                                        "attributes": {
                                            "secret": "in laborum",
                                            "url": "https://rahul.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/webhook"
                                        }
                                    },
                                    "description": ""
                                },
                                "example": {
                                    "data": {
                                        "type": "ut culpa",
                                        "attributes": {
                                            "url": "tempor dolor cupidatat mollit consequ"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "POST_events-webhooks",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/events/webhooks/{webhooks_id}": {
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete a Webhook",
                "operationId": "DELETE_events-webhooks-webhooks_id",
                "parameters": [
                    {
                        "name": "webhooks_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {}
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "DELETE_events-webhooks-webhooksid",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all events",
                "description": "Lists the last 30 days of events for a subscription",
                "operationId": "GET_events",
                "parameters": [
                    {
                        "name": "event_type",
                        "in": "query",
                        "description": "Filter by and event",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "webhook_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event-notification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_events",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/events/{event_id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Show an event",
                "operationId": "GET_events-event_id",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/event-notification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_events-eventid",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/events/subscriptions": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all subscriptions",
                "operationId": "GET_events-subscriptions",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event-subscription"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_events-subscriptions",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Subscribe to a type of event",
                "operationId": "POST_events-subscriptions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "properties": {
                                                    "event-type": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "webhook": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": {
                                        "type": "event-subscription",
                                        "relationships": {
                                            "event-type": {
                                                "data": {
                                                    "id": "12322",
                                                    "type": "event-types"
                                                }
                                            },
                                            "webhook": {
                                                "data": {
                                                    "id": "2837",
                                                    "type": "webhooks"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/event-subscription"
                                        }
                                    },
                                    "description": ""
                                },
                                "example": {
                                    "data": {
                                        "type": "subscription",
                                        "attributes": {
                                            "disabled": false
                                        },
                                        "relationships": {
                                            "event-type": {
                                                "data": {
                                                    "id": "123",
                                                    "type": "event-type"
                                                }
                                            },
                                            "webhook": {
                                                "data": {
                                                    "id": "456",
                                                    "type": "webhook"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "POST_events-subscriptions",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/events/subscriptions/{subscription_id}": {
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete a subscription",
                "operationId": "DELETE_events-subscriptions-subscription_id",
                "parameters": [
                    {
                        "name": "subscription_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "DELETE_events-subscriptions-subscriptionid",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/folders": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "List all folders",
                "operationId": "GET_folders",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/folder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_folders",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/folders/{id}": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Show a folder",
                "operationId": "GET_folders-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/folder"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_folders-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/matters": {
            "get": {
                "tags": [
                    "Matters"
                ],
                "summary": "List all matters",
                "operationId": "GET_matters",
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Following the pattern in JSON API for the [Inclusion of Related Resouces](http://jsonapi.org/format/#fetching-includes), this allows you to ask for related objects to be filled in. \n\nFor `/matters` this only works for `matters-contact`\n\nNote: as the [JSON spec](http://jsonapi.org/format/#document-compound-documents) points out, the related objects will be placed in the `\"included\"` section of the return and not in line with the main object",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "matter-contacts"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/matter"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_matters",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Matters"
                ],
                "summary": "Create matter",
                "operationId": "POST_matters",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "$ref": "#/components/schemas/matter-attributes"
                                            },
                                            "relationships": {
                                                "required": [
                                                    "folder"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "folder": {
                                                        "required": [
                                                            "data"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "$ref": "#/components/schemas/relationship"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": {
                                        "type": "matter",
                                        "attributes": {
                                            "name": "Matter Name"
                                        },
                                        "relationships": {
                                            "folder": {
                                                "id": "775",
                                                "type": "folder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/matter"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST_matters",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/matters/{id}": {
            "get": {
                "tags": [
                    "Matters"
                ],
                "summary": "Show a matter",
                "operationId": "GET_matters-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/matter"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_matters-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "tags": [
                    "Matters"
                ],
                "summary": "Update matter",
                "operationId": "PATCH_matters-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "$ref": "#/components/schemas/matter-attributes"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/matter"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PATCH_matters-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/matter_contacts": {
            "get": {
                "tags": [
                    "Matter Contacts"
                ],
                "summary": "List all matter contacts",
                "operationId": "GET_matter_contacts",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/matter-contact"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_mattercontacts",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/custodians_legal_holds": {
            "get": {
                "tags": [
                    "Custodians Legal Holds"
                ],
                "summary": "List all custodians legal holds",
                "operationId": "GET_custodians_legal_holds",
                "parameters": [
                    {
                        "name": "legal_hold_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/custodians-legal-hold"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_custodianslegalholds",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/custodians_legal_holds/{id}": {
            "get": {
                "tags": [
                    "Custodians Legal Holds"
                ],
                "summary": "Show custodians legal hold",
                "operationId": "GET_custodians_legal_holds-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/custodians-legal-hold"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_custodianslegalholds-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/custodians_legal_holds/{id}/resend": {
            "post": {
                "tags": [
                    "Custodians Legal Holds"
                ],
                "summary": "Resend notice to a custodian",
                "description": "Note: TotalDiscovery has a filter to stop a custodian from receiving the same email multiple times in a day. If you just made this Legal Hold or you have already resent today, then this call will do nothing",
                "operationId": "POST_custodians_legal_holds-id-resend",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {}
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST_custodianslegalholds-id-resend",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/custodians_legal_holds_notes": {
            "get": {
                "tags": [
                    "Custodians Legal Holds Notes"
                ],
                "summary": "List all custodians legal holds notes",
                "operationId": "GET_custodians_legal_holds_notes",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/note"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_custodianslegalholdsnotes",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Custodians Legal Holds Notes"
                ],
                "summary": "Create custodians legal holds note",
                "operationId": "POST_custodians_legal_holds_notes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "custodians_legal_hold_id",
                                    "note"
                                ],
                                "type": "object",
                                "properties": {
                                    "note": {
                                        "required": [
                                            "text"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "text": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "custodians_legal_hold_id": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/note"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "POST_custodianslegalholdsnotes",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/custodians_legal_holds_notes/{id}": {
            "get": {
                "tags": [
                    "Custodians Legal Holds Notes"
                ],
                "summary": "Show custodians legal holds note",
                "operationId": "GET_custodians_legal_holds_notes-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/note"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_custodianslegalholdsnotes-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "tags": [
                    "Custodians Legal Holds Notes"
                ],
                "summary": "Delete custodians legal holds note",
                "operationId": "DELETE_custodians_legal_holds_notes-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "DELETE_custodianslegalholdsnotes-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "tags": [
                    "Custodians Legal Holds Notes"
                ],
                "summary": "Update custodians legal holds note",
                "operationId": "PATCH_custodians_legal_holds_notes-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "note"
                                ],
                                "type": "object",
                                "properties": {
                                    "note": {
                                        "required": [
                                            "text"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "text": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/note"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "PATCH_custodianslegalholdsnotes-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/legal_holds": {
            "get": {
                "tags": [
                    "Legal Holds"
                ],
                "summary": "List all legal holds",
                "description": "Note: You must provide either a matter or folder",
                "operationId": "GET_legal_holds",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Narrow the list of legal holds returned to those that match this filter",
                        "schema": {
                            "maxLength": 255,
                            "type": "string"
                        }
                    },
                    {
                        "name": "custodian_id",
                        "in": "query",
                        "description": "Return only legal holds for this custodian",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "matter_id",
                        "in": "query",
                        "description": "Only return items that belong to this matter",
                        "schema": {
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "description": "Only return items that belong to this company",
                        "schema": {
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/legal-hold"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_legalholds",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_holds/{id}": {
            "get": {
                "tags": [
                    "Legal Holds"
                ],
                "summary": "Show legal hold",
                "operationId": "GET_legal_holds-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/legal-hold"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "GET_legalholds-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_holds/stats": {
            "get": {
                "tags": [
                    "Legal Holds"
                ],
                "summary": "Show legal hold stats",
                "operationId": "GET_legal_holds-stats",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/legal-holds-stats"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_legalholds-stats",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_holds/{id}/resend": {
            "post": {
                "tags": [
                    "Legal Holds"
                ],
                "summary": "Resend notice to a custodian",
                "description": "You must provide a `custodian_id` or the call will fail",
                "operationId": "POST_legal_holds-id-resend",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "custodian_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {}
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST_legalholds-id-resend",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_hold_schemas/{id}": {
            "get": {
                "tags": [
                    "Legal Hold Schemas"
                ],
                "summary": "Get Legal Hold Schema",
                "operationId": "GET-legal-hold-schema",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "velit",
                                        "type": "elit ad labore",
                                        "attributes": {
                                            "name": "veniam in et",
                                            "description": "dolore id quis",
                                            "use-cases": [
                                                "officia Duis nisi",
                                                "ex",
                                                "mollit ut tempor",
                                                "c"
                                            ],
                                            "available": true,
                                            "last-made-available-at": "2001-12-12T08:18:48.282Z"
                                        },
                                        "relationships": {
                                            "legal-hold-schema-versions": {
                                                "data": [
                                                    {
                                                        "id": "sit",
                                                        "type": "irure exercitation ea elit"
                                                    },
                                                    {
                                                        "id": "in laborum qui anim incididunt",
                                                        "type": "enim pariatur dolor in"
                                                    },
                                                    {
                                                        "id": "eu cillum reprehen",
                                                        "type": "occaecat"
                                                    },
                                                    {
                                                        "id": "irure aliqua",
                                                        "type": "in labore consequat in fugiat"
                                                    },
                                                    {
                                                        "id": "qui",
                                                        "type": "in tempor Lorem"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-legal-hold-schema",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Legal Hold Schemas"
                ],
                "summary": "Update Legal Hold Schema",
                "operationId": "PUT-legal-hold-schema",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-schema-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "magna est dolore occaecat veniam",
                                        "type": "consectetur",
                                        "attributes": {
                                            "name": "dolor fugiat labore proident",
                                            "description": "do aliqua",
                                            "use-cases": [
                                                "esse officia Duis laborum",
                                                "exercitation culpa",
                                                "cillum in ut incididunt"
                                            ],
                                            "available": true,
                                            "last-made-available-at": "1944-09-21T08:56:09.676Z"
                                        },
                                        "relationships": {
                                            "legal-hold-schema-versions": {
                                                "data": [
                                                    {
                                                        "id": "ei",
                                                        "type": "est proident ut elit"
                                                    },
                                                    {
                                                        "id": "est ullamco do",
                                                        "type": "dolor deserunt"
                                                    },
                                                    {
                                                        "id": "exercita",
                                                        "type": "veniam irure"
                                                    },
                                                    {
                                                        "id": "labore Lorem",
                                                        "type": "id cupidatat dolore"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-legal-hold-schema",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            },
            "delete": {
                "tags": [
                    "Legal Hold Schemas"
                ],
                "summary": "Delete Legal Hold Schema",
                "operationId": "DELETE-legal-hold-schema",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {}
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-legal-hold-schema",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_hold_schemas": {
            "get": {
                "tags": [
                    "Legal Hold Schemas"
                ],
                "summary": "List Legal Hold Schemas",
                "operationId": "LIST-legal-hold-schemas",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "voluptate dolore deserunt magna irure",
                                            "type": "veniam",
                                            "attributes": {
                                                "name": "fugiat mollit sint",
                                                "description": "adipisicing cillum",
                                                "use-cases": [
                                                    "",
                                                    "ea"
                                                ],
                                                "available": true,
                                                "last-made-available-at": "1943-05-06T08:54:30.901Z"
                                            },
                                            "relationships": {
                                                "legal-hold-schema-versions": {
                                                    "data": [
                                                        {
                                                            "id": "sed",
                                                            "type": "non ad"
                                                        },
                                                        {
                                                            "id": "sit amet fugiat",
                                                            "type": "do"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "id": "Duis commodo s",
                                            "type": "mollit officia in laborum",
                                            "attributes": {
                                                "name": "amet tempor",
                                                "description": "in veniam irure ad fugiat",
                                                "use-cases": [
                                                    "quis dolor sunt",
                                                    "eiusmod eu",
                                                    "in ipsum dolor",
                                                    "enim non pariatur",
                                                    "dolore dolor"
                                                ],
                                                "available": false,
                                                "last-made-available-at": "1996-11-28T00:53:47.363Z"
                                            },
                                            "relationships": {
                                                "legal-hold-schema-versions": {
                                                    "data": [
                                                        {
                                                            "id": "cupidatat magna irure",
                                                            "type": "ipsum commodo"
                                                        },
                                                        {
                                                            "id": "ullamco ipsum Duis",
                                                            "type": "sit Duis nisi labore"
                                                        },
                                                        {
                                                            "id": "reprehenderit dolor nulla",
                                                            "type": "amet anim id"
                                                        },
                                                        {
                                                            "id": "amet anim sunt sed culpa",
                                                            "type": "Duis id occaecat dolore magna"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-legal-hold-schemas",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Legal Hold Schemas"
                ],
                "summary": "Create Legal Hold Schema",
                "operationId": "POST-legal-hold-schema",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-schema-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "laboris est",
                                        "type": "Ut culpa",
                                        "attributes": {
                                            "name": "enim ullamco qui",
                                            "description": "lab",
                                            "use-cases": [
                                                "in esse",
                                                "laborum adipisicing aliqua",
                                                "culpa ipsum commodo",
                                                "elit sed ipsum et sit"
                                            ],
                                            "available": true,
                                            "last-made-available-at": "1988-03-30T04:51:04.333Z"
                                        },
                                        "relationships": {
                                            "legal-hold-schema-versions": {
                                                "data": [
                                                    {
                                                        "id": "Lorem eiusmod",
                                                        "type": "cupidatat amet"
                                                    },
                                                    {
                                                        "id": "exercitation tempor",
                                                        "type": "anim minim sed sit mollit"
                                                    },
                                                    {
                                                        "id": "sint irure exercitation sed",
                                                        "type": "velit consequat"
                                                    },
                                                    {
                                                        "id": "sunt tempor",
                                                        "type": "consectetur dolor minim"
                                                    },
                                                    {
                                                        "id": "sunt cillum nisi i",
                                                        "type": "in ullamco"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-legal-hold-schema",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/legal_hold_schema_versions/{id}": {
            "get": {
                "tags": [
                    "Legal Hold Schema Versions"
                ],
                "summary": "Get Legal Hold Schema Versions",
                "operationId": "GET-legal-hold-schema-versions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-versions-output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-legal-hold-schema-versions",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "tags": [
                    "Legal Hold Schema Versions"
                ],
                "summary": "Delete Legal Hold Schema Version",
                "operationId": "DELETE-legal-hold-schema-version",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-legal-hold-schema-version",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_hold_schema_versions": {
            "get": {
                "tags": [
                    "Legal Hold Schema Versions"
                ],
                "summary": "List Legal Hold Schema Versions",
                "operationId": "LIST-legal-hold-schema-versions",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-versions-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-legal-hold-schema-versions",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Legal Hold Schema Versions"
                ],
                "summary": "Create Legal Hold Schema Version",
                "operationId": "POST-legal-hold-schema-versions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-schema-versions-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-schema-versions-output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-legal-hold-schema-versions",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/legal_hold_schema_versions/{id}/publish": {
            "post": {
                "tags": [
                    "Legal Hold Schema Versions"
                ],
                "summary": "Publish Legal Hold Schema Version",
                "operationId": "PUBLISH-legal-hold-schema-version",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUBLISH-legal-hold-schema-version",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/legal_hold_properties_template/{id}": {
            "get": {
                "tags": [
                    "Legal Hold Properties Templates"
                ],
                "summary": "Show Legal Hold Properties Template",
                "operationId": "GET-legal-hold-properties-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-properties-template-output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-legal-hold-properties-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Legal Hold Properties Templates"
                ],
                "summary": "Update Legal Hold Properties Template",
                "operationId": "PUT-legal-hold-properties-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-properties-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-properties-template-output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-legal-hold-properties-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/legal_hold_properties_template": {
            "get": {
                "tags": [
                    "Legal Hold Properties Templates"
                ],
                "summary": "List Legal Hold Properties Templates",
                "operationId": "LIST-legal-hold-properties-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-properties-template-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-legal-hold-properties-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Legal Hold Properties Templates"
                ],
                "summary": "Create Legal Hold Properties Template",
                "operationId": "POST-legal-hold-properties-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-properties-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-properties-template-output"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-legal-hold-properties-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/acknowledgement_reminder_templates/{id}": {
            "get": {
                "tags": [
                    "Acknowledgement Reminder Templates"
                ],
                "summary": "Get Acknowledgement Reminder Template",
                "operationId": "GET-acknowledgement-reminder-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/acknowledgement-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "amet labore ullamco aliqua",
                                        "type": "veniam",
                                        "attributes": {
                                            "name": "sint",
                                            "subject": "minim enim nisi laborum",
                                            "body-title": "et",
                                            "body": "laboris qui non dolore",
                                            "copy-recipients": [
                                                "Excepteur qui magna deserunt cillum",
                                                "sed cillum dolore in",
                                                "amet est sint dolor incididunt",
                                                "esse ullamco",
                                                "consequat Excepteur culpa"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "in elit consectetur ad",
                                                    "type": "sunt Excepteur ex veniam aute"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-acknowledgement-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Acknowledgement Reminder Templates"
                ],
                "summary": "Update Acknowledgement Reminder Template",
                "operationId": "PUT-acknowledgement-reminder-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/acknowledgement-reminder-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/acknowledgement-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "qui dolore occaecat",
                                        "type": "enim et nulla",
                                        "attributes": {
                                            "name": "consectetur occaecat do",
                                            "subject": "est tempor voluptate sed",
                                            "body-title": "nostrud cillum",
                                            "body": "in occaecat laboris minim",
                                            "copy-recipients": [
                                                "reprehenderit Lorem",
                                                "Lorem eiusmod nostrud in"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "et voluptate",
                                                    "type": "ut sunt"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-acknowledgement-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/acknowledgement_reminder_templates": {
            "get": {
                "tags": [
                    "Acknowledgement Reminder Templates"
                ],
                "summary": "List Acknowledgement Reminder Templates",
                "operationId": "LIST-acknowledgement-reminder-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/acknowledgement-reminder-template-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "amet",
                                            "type": "laboris ea enim culpa in",
                                            "attributes": {
                                                "name": "ea nisi fu",
                                                "subject": "deserunt occaecat adipisicing",
                                                "body-title": "aliqua Excepteur dolore consectetur",
                                                "body": "sed velit ",
                                                "copy-recipients": [
                                                    "laboris ea"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "nulla adipisicing cillum",
                                                        "type": "ipsum est l"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "Duis id",
                                            "type": "aliquip in magna quis",
                                            "attributes": {
                                                "name": "Ut mollit",
                                                "subject": "ut",
                                                "body-title": "labore ame",
                                                "body": "reprehenderit",
                                                "copy-recipients": [
                                                    "officia",
                                                    "in occaecat"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "Ut laboris laborum magna",
                                                        "type": "sint"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "dolore",
                                            "type": "tempor esse dolor",
                                            "attributes": {
                                                "name": "ipsum veniam dolore et",
                                                "subject": "des",
                                                "body-title": "nulla deserunt ad",
                                                "body": "consectetur aliquip esse",
                                                "copy-recipients": [
                                                    "laborum enim fugiat",
                                                    "sunt quis"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "in qui",
                                                        "type": "Ut elit consectetur commodo nulla"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "et consectetur enim",
                                            "type": "ullamco eu labo",
                                            "attributes": {
                                                "name": "Lorem Ut pariatur",
                                                "subject": "exercitation deserunt tempor",
                                                "body-title": "elit Ex",
                                                "body": "ad ullamco consectetur",
                                                "copy-recipients": [
                                                    "officia mollit"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "adipisicing minim nisi",
                                                        "type": "ullam"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-acknowledgement-reminder-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Acknowledgement Reminder Templates"
                ],
                "summary": "Create Acknowledgement Reminder Template",
                "operationId": "POST-acknowledgement-reminder-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/acknowledgement-reminder-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/acknowledgement-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "irure quis ex",
                                        "type": "mollit",
                                        "attributes": {
                                            "name": "aliquip est cillum ipsum",
                                            "subject": "voluptate laboris magna cupidatat",
                                            "body-title": "anim nostrud cupidatat nisi id",
                                            "body": "et nulla aliquip elit est",
                                            "copy-recipients": [
                                                "Ut ut in non",
                                                "irure nisi reprehenderit Dui"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "in veniam laboris",
                                                    "type": "adipisicing Ut ad aliquip"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-acknowledgement-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/escalation_templates/{id}": {
            "get": {
                "tags": [
                    "Escalation Templates"
                ],
                "summary": "Get Escalation Template",
                "operationId": "GET-escalation-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/escalation-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "in eiusmod in Excepteur",
                                        "type": "est cupidatat nostrud commod",
                                        "attributes": {
                                            "name": "Excepteur ut reprehenderit",
                                            "subject": "in ullamco velit veniam",
                                            "body-title": "mollit occaecat",
                                            "body": "in sed",
                                            "copy-recipients": [
                                                "non sed",
                                                "deserunt consequat cillum",
                                                "consequat fugiat",
                                                "nostrud mollit laboris"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "eu et irure",
                                                    "type": "aliqua nisi"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-escalation-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Escalation Templates"
                ],
                "summary": "Update Escalation Template",
                "operationId": "PUT-escalation-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/escalation-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/escalation-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "consequat",
                                        "type": "fugiat sint in",
                                        "attributes": {
                                            "name": "dolor nostrud",
                                            "subject": "sunt eiusmod esse",
                                            "body-title": "sit ad consectetur aliquip",
                                            "body": "vel",
                                            "copy-recipients": [
                                                "adipisicing",
                                                "ad aliquip dolore Ut"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "consectetur veniam",
                                                    "type": "labor"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-escalation-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/escalation_templates": {
            "get": {
                "tags": [
                    "Escalation Templates"
                ],
                "summary": "List Escalation Templates",
                "operationId": "LIST-escalation-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/escalation-template-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "et nostrud veli",
                                            "type": "magna officia Excepteur occaecat",
                                            "attributes": {
                                                "name": "in cupidatat magna veniam",
                                                "subject": "in est laboris",
                                                "body-title": "enim consequat esse repr",
                                                "body": "dolore consequat anim ut",
                                                "copy-recipients": [
                                                    "in aliqua irure est",
                                                    "et"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "non deserunt incididunt",
                                                        "type": "mollit veniam labore anim ut"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "in pariatur esse dolor amet",
                                            "type": "officia dolore ullamco aliqua aliquip",
                                            "attributes": {
                                                "name": "ali",
                                                "subject": "eu sunt",
                                                "body-title": "Duis",
                                                "body": "in veniam mo",
                                                "copy-recipients": [
                                                    "non ad fugiat ullamco voluptate",
                                                    "in exercitation"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "anim in eiusmod Ut laborum",
                                                        "type": "elit velit cillum eu"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "commodo qui",
                                            "type": "sint ea fugiat",
                                            "attributes": {
                                                "name": "ut velit fugiat mollit",
                                                "subject": "irure Ut",
                                                "body-title": "eiusmod amet Ut exercitation esse",
                                                "body": "eu incididunt quis",
                                                "copy-recipients": [
                                                    "in adipisicing",
                                                    "enim Ut quis dolor est",
                                                    "eiusmod labore laborum magna",
                                                    "non do esse"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "esse fugiat adipisicing",
                                                        "type": "est dolor"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "Ut anim",
                                            "type": "tempor commodo in",
                                            "attributes": {
                                                "name": "est consectetur anim",
                                                "subject": "dolor cupidatat magna dolor",
                                                "body-title": "commodo dolor sunt quis",
                                                "body": "amet",
                                                "copy-recipients": [
                                                    "culpa inci",
                                                    "qui occaecat dolore",
                                                    "exercitation qui aliquip eiusmod Lorem"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "ex mollit esse pariatur",
                                                        "type": "in ex consequat "
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-escalation-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Escalation Templates"
                ],
                "summary": "Create Escalation Template",
                "operationId": "POST-escalation-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/escalation-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/escalation-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "sit in proident",
                                        "type": "esse ut",
                                        "attributes": {
                                            "name": "ad Duis Excepteur laborum",
                                            "subject": "aliqua quis",
                                            "body-title": "v",
                                            "body": "adipisicing ex voluptate et",
                                            "copy-recipients": [
                                                "occaecat incididunt cupidatat",
                                                "ipsum sint"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "pariatur ullamco",
                                                    "type": "adipisicing consequat magna"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-escalation-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_notice_templates/{id}": {
            "get": {
                "tags": [
                    "Hold Notice Templates"
                ],
                "summary": "Get Hold Notice Template",
                "operationId": "GET-hold-notice-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-notice-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "deserunt fugiat elit commodo",
                                        "type": "nulla pariatur",
                                        "attributes": {
                                            "include-question": true,
                                            "name": "aliquip exercitation",
                                            "subject": "occaecat aute anim aliquip exercitation",
                                            "body-title": "anim elit incididunt m",
                                            "body": "non dolor",
                                            "copy-recipients": [
                                                "non pariatur eu in",
                                                "proident id",
                                                "officia sint tempor Lorem Ut",
                                                "officia"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "occaecat",
                                                    "type": "quis pariatur"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-hold-notice-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Hold Notice Templates"
                ],
                "summary": "Update Hold Notice Template",
                "operationId": "PUT-hold-notice-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-notice-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-notice-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "incididunt elit Excepteur in",
                                        "type": "aliqua sed in qui",
                                        "attributes": {
                                            "include-question": true,
                                            "name": "nisi tempor Lorem cillum",
                                            "subject": "eu ut consectetur",
                                            "body-title": "pariatur reprehenderit enim",
                                            "body": "Ut est dolor",
                                            "copy-recipients": [
                                                "do pariatur voluptate",
                                                "aute ullamco minim in enim",
                                                "laborum ut ea ad labore"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "ea ad mollit dolore fugiat",
                                                    "type": "irure"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-hold-notice-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_notice_templates": {
            "get": {
                "tags": [
                    "Hold Notice Templates"
                ],
                "summary": "List Hold Notice Templates",
                "operationId": "LIST-hold-notice-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-notice-template-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "non eiusmod ut proident nostrud",
                                            "type": "velit",
                                            "attributes": {
                                                "include-question": true,
                                                "name": "consequat sunt",
                                                "subject": "id sit",
                                                "body-title": "in ex",
                                                "body": "sint ullamco anim enim",
                                                "copy-recipients": [
                                                    "aute i"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "laboris dolor commodo",
                                                        "type": "deserunt ea tempor do"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "Excepteu",
                                            "type": "et aliquip no",
                                            "attributes": {
                                                "include-question": false,
                                                "name": "id ullamco ipsum laboris",
                                                "subject": "ipsum culpa anim",
                                                "body-title": "ut Ut non nisi ipsum",
                                                "body": "magna irure amet",
                                                "copy-recipients": [
                                                    "veniam ex",
                                                    "in ut",
                                                    "non in ut anim"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "aute eiusmod",
                                                        "type": "elit i"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "cupidatat do aliquip",
                                            "type": "enim veniam tempor incididunt",
                                            "attributes": {
                                                "include-question": true,
                                                "name": "enim",
                                                "subject": "Excepteur tempor",
                                                "body-title": "Duis adipisicing quis irure nostrud",
                                                "body": "Lorem min",
                                                "copy-recipients": [
                                                    "reprehenderit pariatur",
                                                    "incididunt exercitation",
                                                    "dolore nisi dolor",
                                                    "ut d"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "in consequat eu d",
                                                        "type": "dolor laborum irure officia"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "reprehenderit laborum in do",
                                            "type": "amet ",
                                            "attributes": {
                                                "include-question": false,
                                                "name": "do irure aute minim",
                                                "subject": "quis in enim dolore ex",
                                                "body-title": "ex fugiat occaecat sunt",
                                                "body": "consequat eu",
                                                "copy-recipients": [
                                                    "exercitation labore Excepteur mollit",
                                                    "amet pariatur aliqua",
                                                    "sed sunt cillum aliqua Duis"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "laborum e",
                                                        "type": "esse tempor"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-hold-notice-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Hold Notice Templates"
                ],
                "summary": "Create Hold Notice Template",
                "operationId": "POST-hold-notice-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-notice-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-notice-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "ea exercitation cillum nostrud velit",
                                        "type": "nulla",
                                        "attributes": {
                                            "include-question": true,
                                            "name": "magna incididunt ullamco",
                                            "subject": "exercitation velit labore in",
                                            "body-title": "incididunt aliqua",
                                            "body": "et ea ex",
                                            "copy-recipients": [
                                                "in reprehenderit esse exercitation nostrud",
                                                "sit voluptate dolore"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "sunt et",
                                                    "type": "ipsum"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-hold-notice-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_release_template/{id}": {
            "get": {
                "tags": [
                    "Hold Release Templates"
                ],
                "summary": "Get Hold Release Template",
                "operationId": "GET-hold-release-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-release-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "voluptate cupidatat id",
                                        "type": "eu cillum tempor consectetur",
                                        "attributes": {
                                            "name": "laborum",
                                            "subject": "tempor incididunt dolor ",
                                            "body-title": "tempor do Duis qui",
                                            "body": "elit fugiat dolore deserunt",
                                            "copy-recipients": [
                                                "fugiat sed",
                                                "cupidatat Duis par",
                                                "sed voluptate in ipsum",
                                                "in labore aliqua sit"
                                            ],
                                            "include-active-holds": false
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "voluptate in",
                                                    "type": "pariatur deserunt sint"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-hold-release-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Hold Release Templates"
                ],
                "summary": "Update Hold Release Template",
                "operationId": "PUT-hold-release-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-release-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-release-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "ex",
                                        "type": "ad aliquip dolor eu consequat",
                                        "attributes": {
                                            "name": "deserunt dolore",
                                            "subject": "officia ipsum",
                                            "body-title": "dolor cillum",
                                            "body": "in occaecat officia pariatur",
                                            "copy-recipients": [
                                                "magna cupidatat",
                                                "exercitation voluptate non elit dolor",
                                                "nostrud in nulla",
                                                "fugiat sint adipisicing velit"
                                            ],
                                            "include-active-holds": true
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "consequat quis est",
                                                    "type": "Duis voluptate pariatur in"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-hold-release-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_release_template": {
            "get": {
                "tags": [
                    "Hold Release Templates"
                ],
                "summary": "List Hold Release Templates",
                "operationId": "LIST-hold-release-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-release-template-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "pariatur laboris sunt ad",
                                            "type": "nostrud amet cillum est",
                                            "attributes": {
                                                "name": "dolore",
                                                "subject": "nisi",
                                                "body-title": "mollit ad dolor sunt",
                                                "body": "Ut aute",
                                                "copy-recipients": [
                                                    "dolore commodo et",
                                                    "esse quis irure",
                                                    "quis minim cillum",
                                                    "elit Ut",
                                                    "dolor enim"
                                                ],
                                                "include-active-holds": true
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "adipisicing tempor nostrud laborum",
                                                        "type": "ex aliquip commodo voluptate"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "esse sed in dolore nostrud",
                                            "type": "cillum quis consequat Excepteur",
                                            "attributes": {
                                                "name": "",
                                                "subject": "sunt",
                                                "body-title": "culpa dolor est Duis",
                                                "body": "cupidatat sed id fugiat",
                                                "copy-recipients": [
                                                    "esse nisi occaecat deserunt c"
                                                ],
                                                "include-active-holds": true
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "laboris dolor proident officia deserunt",
                                                        "type": "minim in aliqua pariatur amet"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-hold-release-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Hold Release Templates"
                ],
                "summary": "Create Hold Release Template",
                "operationId": "POST-hold-release-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-release-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-release-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "sint ut fugiat",
                                        "type": "lab",
                                        "attributes": {
                                            "name": "irure quis est velit",
                                            "subject": "sint dolor incid",
                                            "body-title": "nostrud quis Lorem la",
                                            "body": "nostrud ut nulla amet",
                                            "copy-recipients": [
                                                "sed nisi do et",
                                                "laboris cupidatat"
                                            ],
                                            "include-active-holds": true
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "ut",
                                                    "type": "in"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-hold-release-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_reminder_template/{id}": {
            "get": {
                "tags": [
                    "Hold Reminder Templates"
                ],
                "summary": "Get Hold Reminder Template",
                "operationId": "GET-hold-reminder-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "quis mollit irure in eiusmod",
                                        "type": "irure est ullamco in eu",
                                        "attributes": {
                                            "name": "sed nulla s",
                                            "subject": "dolore m",
                                            "body-title": "ut id",
                                            "body": "cupidatat irure id dolore",
                                            "copy-recipients": [
                                                "magna aliqua culpa sint q",
                                                "qui ex Ut adipisicing"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "veniam",
                                                    "type": "deserunt sed irure culpa laboris"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-hold-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "tags": [
                    "Hold Reminder Templates"
                ],
                "summary": "Update Hold Reminder Template",
                "operationId": "PUT-hold-reminder-template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-reminder-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "ad ut",
                                        "type": "in laborum",
                                        "attributes": {
                                            "name": "nisi eiusmod laboris Ut esse",
                                            "subject": "consequat",
                                            "body-title": "aliqua sed labore",
                                            "body": "quis dolor",
                                            "copy-recipients": [
                                                "reprehenderit Ut consequat",
                                                "est incididunt cupidatat",
                                                "pariatur nisi esse",
                                                "n"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "esse sed",
                                                    "type": "enim proident"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-hold-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/hold_reminder_template": {
            "get": {
                "tags": [
                    "Hold Reminder Templates"
                ],
                "summary": "List Hold Reminder Templates",
                "operationId": "LIST-hold-reminder-templates",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-reminder-template-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "dolore culpa sit Excepteur sint",
                                            "type": "aliquip sunt ad est Duis",
                                            "attributes": {
                                                "name": "non Excepteur ad nulla amet",
                                                "subject": "aliquip",
                                                "body-title": "do la",
                                                "body": "Lorem minim aliqua id",
                                                "copy-recipients": [
                                                    "adipisicin"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "occaecat dolore",
                                                        "type": "nisi mollit laborum"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "est dolor",
                                            "type": "incididunt cupidatat",
                                            "attributes": {
                                                "name": "Excepteur sed",
                                                "subject": "culpa ea",
                                                "body-title": "ad sint laboris deserunt Duis",
                                                "body": "ex",
                                                "copy-recipients": [
                                                    "exercitation cupidatat proident id",
                                                    "mollit dolore exercitation aliqua"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "sed mollit id nostrud tempor",
                                                        "type": "labore consequat commodo"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "Lorem sed qui",
                                            "type": "ut eu",
                                            "attributes": {
                                                "name": "labori",
                                                "subject": "non laborum cillum sunt culpa",
                                                "body-title": "velit cupidatat",
                                                "body": "veniam ad in Ut ea",
                                                "copy-recipients": [
                                                    "cillum tempor",
                                                    "nulla culpa incididunt",
                                                    "do",
                                                    "aute ipsum adipisicing"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "dolore te",
                                                        "type": "Duis "
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "cillum aliquip enim in",
                                            "type": "dolore irure cillum occaecat",
                                            "attributes": {
                                                "name": "irure enim",
                                                "subject": "Lorem cillum sed laborum minim",
                                                "body-title": "dolor non est",
                                                "body": "ipsum sed eiusmod",
                                                "copy-recipients": [
                                                    "in sunt"
                                                ]
                                            },
                                            "relationships": {
                                                "legal-hold-schema-version": {
                                                    "data": {
                                                        "id": "qui ullam",
                                                        "type": "sed Ut voluptate"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-hold-reminder-templates",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "tags": [
                    "Hold Reminder Templates"
                ],
                "summary": "Create Hold Reminder Template",
                "operationId": "POST-hold-reminder-template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hold-reminder-template-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hold-reminder-template-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "nulla id enim",
                                        "type": "ipsum quis officia consequat do",
                                        "attributes": {
                                            "name": "reprehenderit minim",
                                            "subject": "irure",
                                            "body-title": "dolor veniam sint ",
                                            "body": "sunt exercitation dolore",
                                            "copy-recipients": [
                                                "laborum null"
                                            ]
                                        },
                                        "relationships": {
                                            "legal-hold-schema-version": {
                                                "data": {
                                                    "id": "enim quis incididunt minim dolor",
                                                    "type": "veniam laboris nisi dolore"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-hold-reminder-template",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/profiles/{id}": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Show profile",
                "operationId": "GET_profiles-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_profiles-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Show caller profile",
                "operationId": "GET_me",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET_me",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/message_attachments": {
            "get": {
                "tags": [
                    "Message Attachments"
                ],
                "summary": "List Message Attachments",
                "operationId": "findMessage-attachments",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message-attachment-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Message Attachments"
                ],
                "summary": "Create Message Attachment",
                "operationId": "createMessage-attachment",
                "parameters": [
                    {
                        "name": "Content-Disposition",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message-attachment-output-detailed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/message_attachments/{messageAttachmentId}": {
            "get": {
                "tags": [
                    "Message Attachments"
                ],
                "summary": "Get Message Attachment",
                "operationId": "getMessage-attachment",
                "parameters": [
                    {
                        "name": "messageAttachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message-attachment-output-detailed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Message Attachments"
                ],
                "summary": "Delete Message Attachment",
                "operationId": "deleteMessage-attachment",
                "parameters": [
                    {
                        "name": "messageAttachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {}
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "List Collections",
                "description": "Lists collections.\n\nYou can scope down this function further by either matter_id or custodian_id by passing in the relevant query parameter.\n\nSorting follows JSON API standard; reverse sorts are done by prefixing the sort parameter with \"-\". (TODO: Pull this out to a higher-level heading.)\n\nInclude parameters support custodian and collection_telemetry. (TODO: Pull out to a higher-level heading.)\n\nTerm filtering is available, and filters on collection and custodian name.",
                "operationId": "LIST-collections",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "custodian_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "name",
                                "created-at",
                                "collection-telemetry.count",
                                "collection-telemetry.exception-count",
                                "collection-telemetry.size",
                                "collection-telemetry.workflow-status",
                                "collection-telemetry.workflow-status-text",
                                "custodian.name",
                                "collection-telemetry.percent-complete",
                                "collection-telemetry.estimated-complete-time",
                                "collection-telemetry.transfer-speed"
                            ]
                        }
                    },
                    {
                        "name": "filter[term]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "custodian",
                                "collection-telemetry",
                                "collection-driver",
                                "user"
                            ]
                        }
                    },
                    {
                        "name": "filter[workflow-status]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "collecting",
                                "paused",
                                "error",
                                "upload",
                                "complete"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/collection-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "aute esse ipsum do ut",
                                            "type": "collections",
                                            "attributes": {
                                                "specification": {
                                                    "configuration": [
                                                        {
                                                            "type": "email",
                                                            "options": "videos"
                                                        },
                                                        {
                                                            "type": "file",
                                                            "options": "videos"
                                                        },
                                                        {
                                                            "type": "email",
                                                            "options": "music"
                                                        }
                                                    ]
                                                },
                                                "name": "cillum ipsum",
                                                "date-from": "2016-07-12T12:11:18.199Z",
                                                "date-to": "1978-11-26T05:11:31.878Z",
                                                "send-notification-on-create": false
                                            },
                                            "relationships": {
                                                "custodian": {
                                                    "data": {
                                                        "id": "incididunt deserunt ea Duis fugiat",
                                                        "type": "incididunt"
                                                    }
                                                },
                                                "collection-telemetry": {
                                                    "data": {
                                                        "id": "consectetur sit in",
                                                        "type": "eiusmod ullamco"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "",
                                            "type": "dolor",
                                            "attributes": {
                                                "specification": {
                                                    "configuration": [
                                                        {
                                                            "type": "email",
                                                            "options": "exchange"
                                                        },
                                                        {
                                                            "type": "email",
                                                            "options": "custodian-identified"
                                                        },
                                                        {
                                                            "type": "email",
                                                            "options": "videos"
                                                        },
                                                        {
                                                            "type": "email",
                                                            "options": "videos"
                                                        }
                                                    ]
                                                },
                                                "name": "ea velit",
                                                "date-from": "2001-02-13T08:31:22.588Z",
                                                "date-to": "2010-01-30T21:12:56.271Z",
                                                "send-notification-on-create": true
                                            },
                                            "relationships": {
                                                "custodian": {
                                                    "data": {
                                                        "id": "id irure",
                                                        "type": "laboris"
                                                    }
                                                },
                                                "collection-telemetry": {
                                                    "data": {
                                                        "id": "reprehenderit voluptate",
                                                        "type": "eiusmod id minim"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "tempor ex consequat",
                                            "type": "Duis sit ea aute",
                                            "attributes": {
                                                "specification": {
                                                    "configuration": [
                                                        {
                                                            "type": "email",
                                                            "options": "pictures"
                                                        }
                                                    ]
                                                },
                                                "name": "sunt in aliquip do id",
                                                "date-from": "1946-08-26T14:51:28.491Z",
                                                "date-to": "1940-10-13T03:08:31.068Z",
                                                "send-notification-on-create": false
                                            },
                                            "relationships": {
                                                "custodian": {
                                                    "data": {
                                                        "id": "irure incididunt",
                                                        "type": "enim sed"
                                                    }
                                                },
                                                "collection-telemetry": {
                                                    "data": {
                                                        "id": "ea de",
                                                        "type": "non ut occ"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "id": "sint dolore officia",
                                            "type": "in voluptate reprehenderit magna Duis",
                                            "attributes": {
                                                "specification": {
                                                    "configuration": [
                                                        {
                                                            "type": "file",
                                                            "options": "custodian-identified"
                                                        },
                                                        {
                                                            "type": "file",
                                                            "options": "music"
                                                        },
                                                        {
                                                            "type": "file",
                                                            "options": "common"
                                                        },
                                                        {
                                                            "type": "email",
                                                            "options": "network-collect"
                                                        }
                                                    ]
                                                },
                                                "name": "mi",
                                                "date-from": "2011-10-07T22:24:57.238Z",
                                                "date-to": "2006-05-08T21:35:09.239Z",
                                                "send-notification-on-create": false
                                            },
                                            "relationships": {
                                                "custodian": {
                                                    "data": {
                                                        "id": "occaecat eu tempor",
                                                        "type": "mollit ipsum sed id"
                                                    }
                                                },
                                                "collection-telemetry": {
                                                    "data": {
                                                        "id": "in amet dolor",
                                                        "type": "ea aliquip i"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "included": [
                                        {
                                            "id": "irure culpa",
                                            "type": "eu est dolore velit",
                                            "attributes": {
                                                "name": "officia magna",
                                                "email": "aliquip labore eu ad",
                                                "employee-id": "ex Duis commodo eiusmod",
                                                "department": "Excepteur",
                                                "location": "cillum et laborum ex reprehenderit"
                                            },
                                            "relationships": {
                                                "collections": {
                                                    "data": [
                                                        {
                                                            "id": "sint amet eu",
                                                            "type": "aute voluptate"
                                                        },
                                                        {
                                                            "id": "esse aliqua nulla",
                                                            "type": "cupidatat cillum"
                                                        },
                                                        {
                                                            "id": "nulla occaecat",
                                                            "type": "in deserunt commodo magna"
                                                        },
                                                        {
                                                            "id": "tempor cillum",
                                                            "type": "elit"
                                                        },
                                                        {
                                                            "id": "Duis culpa eiusmod commodo",
                                                            "type": "voluptate incididunt"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Create Collection",
                "description": "Creates collections.\n\nThe supplied custodian and matter need to be in the same tenant.\n\nSpecification allows for the following options for each type:\n- file: 'common', 'custodian-identified', 'network-collect', 'pictures', 'music', 'videos'\n- email: 'exchange'",
                "operationId": "CREATE-collection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/collection-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/collection-output"
                                },
                                "example": {
                                    "data": {
                                        "id": "sed nostrud incididunt velit eius",
                                        "type": "collections",
                                        "attributes": {
                                            "specification": {
                                                "configuration": [
                                                    {
                                                        "type": "email",
                                                        "options": "videos"
                                                    },
                                                    {
                                                        "type": "email",
                                                        "options": "exchange"
                                                    },
                                                    {
                                                        "type": "file",
                                                        "options": "videos"
                                                    },
                                                    {
                                                        "type": "email",
                                                        "options": "videos"
                                                    }
                                                ]
                                            },
                                            "name": "consequat",
                                            "date-from": "1982-10-29T13:29:51.378Z",
                                            "date-to": "1964-02-22T13:36:15.941Z",
                                            "send-notification-on-create": false
                                        },
                                        "relationships": {
                                            "custodian": {
                                                "data": {
                                                    "id": "cupidatat qui pariatur",
                                                    "type": "custodians"
                                                }
                                            },
                                            "collection-telemetry": {
                                                "data": {
                                                    "id": "labore",
                                                    "type": "collection-telemetries"
                                                }
                                            }
                                        }
                                    },
                                    "included": [
                                        {
                                            "id": "sit eiusmod qui aliqua in",
                                            "type": "in",
                                            "attributes": {
                                                "name": "sunt nostrud ut",
                                                "email": "ex commodo",
                                                "employee-id": "qui dolore",
                                                "department": "aliqua adipisicing",
                                                "location": "cillum ullamco occaecat id"
                                            },
                                            "relationships": {
                                                "collections": {
                                                    "data": [
                                                        {
                                                            "id": "Excepteur occaecat ",
                                                            "type": "magna"
                                                        },
                                                        {
                                                            "id": "non cupidatat",
                                                            "type": "deserunt"
                                                        },
                                                        {
                                                            "id": "ut ullamco",
                                                            "type": "in quis consectetur"
                                                        },
                                                        {
                                                            "id": "do dolore",
                                                            "type": "ut officia"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "id": "nisi",
                                            "type": "ex ut",
                                            "attributes": {
                                                "name": "dolore et ex",
                                                "email": "incididunt",
                                                "employee-id": "laboris ut",
                                                "department": "enim in et officia",
                                                "location": "veniam velit id aliqua"
                                            },
                                            "relationships": {
                                                "collections": {
                                                    "data": [
                                                        {
                                                            "id": "mollit dolor ipsum aliqua",
                                                            "type": "sint"
                                                        },
                                                        {
                                                            "id": "ipsum dolore aute",
                                                            "type": "culpa sunt do in aute"
                                                        },
                                                        {
                                                            "id": "aute et sunt fugiat",
                                                            "type": "labore tempor"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "id": "dolore dolor",
                                            "type": "velit",
                                            "attributes": {
                                                "name": "",
                                                "email": "elit aliqua pariatur officia qui",
                                                "employee-id": "qui culpa",
                                                "department": "ut quis",
                                                "location": "ut sed non reprehenderit pariatur"
                                            },
                                            "relationships": {
                                                "collections": {
                                                    "data": [
                                                        {
                                                            "id": "veniam aute eu cillum dolore",
                                                            "type": "dolore aliquip ipsum irure"
                                                        },
                                                        {
                                                            "id": "enim incidi",
                                                            "type": "ad eiusmod deserunt"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "id": "non dolor ea laborum",
                                            "type": "irure mollit tempor",
                                            "attributes": {
                                                "status": "sunt reprehenderit adipisicing in ad",
                                                "workflow-status": "commodo Duis",
                                                "workflow-status-text": "dolore officia",
                                                "size": -37768328,
                                                "count": -76054700,
                                                "exception-count": 14400223,
                                                "file-type-aggregations": {}
                                            },
                                            "relationships": {
                                                "collection": {
                                                    "data": {}
                                                }
                                            }
                                        },
                                        {
                                            "id": "minim",
                                            "type": "et quis do Lorem",
                                            "attributes": {
                                                "status": "eiusmod Lorem enim",
                                                "workflow-status": "mollit occaecat est voluptate",
                                                "workflow-status-text": "sit eu consectetur sint",
                                                "size": -58321288,
                                                "count": -55365694,
                                                "exception-count": 22115546,
                                                "file-type-aggregations": {}
                                            },
                                            "relationships": {
                                                "collection": {
                                                    "data": {}
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/collections/{id}/exceptions": {
            "get": {
                "tags": [
                    "Collection Exceptions"
                ],
                "summary": "List Exceptions for a Collection",
                "operationId": "LIST_collection_exceptions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/collection-exception-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "LIST_collectionexceptions-id",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/collections/{id}/reminders/resend": {
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Resend Collection Reminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/custodians": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "List Custodians",
                "description": "Lists collections.\n\nYou can scope down this function further by matter_id by passing in the relevant query parameter.\n\nOnly tenants without multiple directories can call this API.",
                "operationId": "LIST-custodians",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "collection_telemetry.count",
                                "collection_telemetry.size",
                                "collection_telemetry.exception_count",
                                "collection_telemetry.workflow_status",
                                "collection_telemetry.workflow_status_text",
                                "custodian.name",
                                "last_notification_sent_at"
                            ]
                        }
                    },
                    {
                        "name": "filter[term]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[ids]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/custodian-outputs"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collections/{id}": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "Show Collection",
                "operationId": "SHOW-collection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "custodian",
                                "collection-telemetry",
                                "collection-driver",
                                "user"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/collection"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Collections"
                ],
                "summary": "Delete Collection",
                "operationId": "DELETE_collection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "DELETE_collection",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "tags": [
                    "Collections"
                ],
                "summary": "Update Collection",
                "description": "Updates a collection.",
                "operationId": "UPDATE-collection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/collection-update-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": ""
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/collections/{id}/custodian_identified_items": {
            "get": {
                "tags": [
                    "Custodian Identified Items"
                ],
                "summary": "List Custodian Identified Items for a Collection",
                "operationId": "LIST-custodian-identified-items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "item-type",
                                "location"
                            ]
                        }
                    },
                    {
                        "name": "filter[term]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/custodian-identified-items-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "LIST-custodian-identified-items",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/collections/{id}/driver": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "Show Collection Driver",
                "operationId": "GET-collection-driver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/collection-driver"
                                },
                                "example": {
                                    "id": "labor",
                                    "type": "collection-driver",
                                    "attributes": {
                                        "type": "DiscoveryBOT",
                                        "properties": {
                                            "access-id": "ullamco sunt reprehenderit",
                                            "access-code": "consectetur Ut fugiat esse"
                                        }
                                    },
                                    "relationships": {
                                        "collection": {
                                            "data": {
                                                "id": "ullamco",
                                                "type": "Lorem laboris aute aliquip anim"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/export_jobs": {
            "get": {
                "tags": [
                    "Export Jobs"
                ],
                "summary": "List Export Jobs",
                "operationId": "LIST-export-jobs",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "created-at",
                                "name",
                                "status",
                                "status_text",
                                "collection.name",
                                "collection.custodian.name",
                                "export_destination.name"
                            ]
                        }
                    },
                    {
                        "name": "filter[term]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[collection_ids]",
                        "in": "query",
                        "description": "A comma separated string of collection ids",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection",
                                "user",
                                "collection.custodian",
                                "export-destination",
                                "collection.collection-telemetry"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/export-job-outputs"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "labore",
                                            "type": "ad ipsum incididunt non",
                                            "attributes": {
                                                "name": "in Ut in irur",
                                                "status": "aute minim laborum dolore",
                                                "status-text": "in aliqua culpa",
                                                "created-at": "2010-11-10T16:23:27.708Z"
                                            },
                                            "relationships": {
                                                "collection": {
                                                    "data": {
                                                        "id": "ut",
                                                        "type": "aliquip voluptate in sed enim"
                                                    }
                                                },
                                                "created-by": {}
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Export Jobs"
                ],
                "summary": "Create Export Job",
                "operationId": "POST_export-job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/export-job"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/export-job"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST_export-job",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/export_jobs/{id}": {
            "get": {
                "tags": [
                    "Export Jobs"
                ],
                "summary": "Show Export Job",
                "operationId": "SHOW-export-job",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection",
                                "export-destination",
                                "user",
                                "collection.custodian",
                                "collection.collection-telemetry"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/export-job"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Export Jobs"
                ],
                "summary": "Delete Export Job",
                "operationId": "DELETE_export-job",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-stoplight": {
                    "id": "DELETE_export-job",
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "tags": [
                    "Export Jobs"
                ],
                "summary": "Update Export Job",
                "description": "Updates an export job.",
                "operationId": "UPDATE-export-job",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/export-job"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/export-job"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/export_destinations": {
            "get": {
                "tags": [
                    "Export Destinations"
                ],
                "summary": "List Export Destinations",
                "operationId": "LIST-export_destinations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 10.0
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                        "schema": {
                            "minimum": 0,
                            "type": "number",
                            "default": 0.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/export-destination-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/legal_hold_build_properties": {
            "get": {
                "tags": [
                    "Legal Hold Build Properties"
                ],
                "summary": "List Legal Hold Build Properties",
                "operationId": "LIST-legal-hold-build-properties",
                "parameters": [
                    {
                        "name": "legal_hold_schema_version_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "legal_hold_schema_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-build-property-outputs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Legal Hold Build Properties"
                ],
                "summary": "Create Legal Hold Build Property",
                "operationId": "POST-legal-hold-build-properties",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-build-property-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-build-property-output"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {}
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/legal_hold_build_properties/{id}": {
            "get": {
                "tags": [
                    "Legal Hold Build Properties"
                ],
                "summary": "Show Legal Hold Build Property",
                "operationId": "GET-legal-hold-build-properties",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-build-property-output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Legal Hold Build Properties"
                ],
                "summary": "Update Legal Hold Build Property",
                "operationId": "PATCH-legal-hold-build-properties",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/legal-hold-build-property-input"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/legal-hold-build-property-output"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/id"
                                            },
                                            "detail": "unable to modify"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/model_schema_fields": {
            "get": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "List Model Schema Fields",
                "operationId": "LIST-model-schema-fields",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "description",
                                "display-name",
                                "custom-field"
                            ]
                        }
                    },
                    {
                        "name": "filter[term]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[custom-field-model]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "custodian"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "display-name": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "display-order": {
                                                                "type": "integer"
                                                            },
                                                            "custom-field-model": {
                                                                "type": "string"
                                                            },
                                                            "custom-field": {
                                                                "type": "boolean"
                                                            },
                                                            "created-at": {
                                                                "type": "string"
                                                            },
                                                            "updated-at": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-private": true
            },
            "post": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Create Model Schema Field",
                "description": "Creates a custom Model Schema Field\n\nThe custom field model needs to be \"custodian\".",
                "operationId": "CREATE-model-schema-field",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "required": [
                                                    "custom-field-model",
                                                    "display-name"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "display-name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "display-order": {
                                                        "type": "integer"
                                                    },
                                                    "custom-field-model": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-private": true,
                "x-codegen-request-body-name": "body"
            }
        },
        "/model_schema_fields/{id}": {
            "get": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Show Model Schema Field",
                "operationId": "SHOW-model-schema-field",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "attributes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "display-name": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "display-order": {
                                                            "type": "integer"
                                                        },
                                                        "custom-field-model": {
                                                            "type": "string"
                                                        },
                                                        "custom-field": {
                                                            "type": "boolean"
                                                        },
                                                        "created-at": {
                                                            "type": "string"
                                                        },
                                                        "updated-at": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-private": true
            },
            "delete": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Delete Model Schema Field",
                "operationId": "DELETE-model-schema-field",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "X-AUTH-TOKEN": []
                    }
                ],
                "x-private": true
            },
            "patch": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Update Model Schema Field",
                "operationId": "UPDATE-model-field-schema",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "display-name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "display-order": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "attributes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "display-name": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "display-order": {
                                                            "type": "integer"
                                                        },
                                                        "custom-field-model": {
                                                            "type": "string"
                                                        },
                                                        "custom-field": {
                                                            "type": "boolean"
                                                        },
                                                        "created-at": {
                                                            "type": "string"
                                                        },
                                                        "updated-at": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        "Not Found"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed, but the supplied data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "pointer": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "source": {
                                                "pointer": "/data/attributes/name"
                                            },
                                            "detail": "must be valid"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-private": true,
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "matter": {
                "title": "matter",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/matter-attributes"
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "folder": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "matter-contacts": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/relationship"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "matter",
                    "name": "matter",
                    "public": true
                }
            },
            "relationship": {
                "title": "relationship",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "x-stoplight": {
                    "id": "relationship",
                    "name": "relationship",
                    "public": true
                }
            },
            "profile": {
                "title": "profile",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "last-sign-in-at": {
                                "type": "string"
                            },
                            "last-accessed-at": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "profile",
                    "name": "profile",
                    "public": true
                }
            },
            "legal-hold": {
                "title": "legal-hold",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "draft": {
                                "type": "boolean"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "matter": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "custodians-legal-holds": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "legal-hold",
                    "name": "legal-hold",
                    "public": true
                }
            },
            "custodians-legal-hold": {
                "title": "custodians-legal-hold",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "",
                                "enum": [
                                    "not_on_hold",
                                    "sent",
                                    "acknowledged",
                                    "released",
                                    "error",
                                    "sending",
                                    "releasing",
                                    "pending"
                                ]
                            },
                            "on-hold": {
                                "type": "boolean"
                            },
                            "sent-at": {
                                "type": "string"
                            },
                            "acknowledged-at": {
                                "type": "string"
                            },
                            "released-at": {
                                "type": "string"
                            },
                            "last-hold-reminder-sent-at": {
                                "type": "string"
                            },
                            "last-acknowledgement-reminder-sent-at": {
                                "type": "string"
                            },
                            "last-escalated-at": {
                                "type": "string"
                            },
                            "error": {
                                "type": "string"
                            },
                            "escalation-error": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "custodian": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "note": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "custodians-legal-hold",
                    "name": "custodians-legal-hold",
                    "public": true
                }
            },
            "note": {
                "title": "note",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "custodians-legal-hold": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "last-modified-by": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "note",
                    "name": "note",
                    "public": true
                }
            },
            "folder": {
                "title": "folder",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "folder",
                    "name": "folder",
                    "public": true
                }
            },
            "matter-contact": {
                "title": "matter-contact",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "info": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "matter": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "matter-contact",
                    "name": "matter-contact",
                    "public": true
                }
            },
            "legal-holds-stats": {
                "title": "legal-holds-stats",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "total-count": {
                                "type": "integer"
                            },
                            "draft-count": {
                                "type": "integer"
                            },
                            "sent-count": {
                                "type": "integer"
                            },
                            "released-count": {
                                "type": "integer"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "matter": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "folder": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "legal-holds-stats",
                    "name": "legal-holds-stats",
                    "public": true
                }
            },
            "matter-attributes": {
                "title": "matter-attributes",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "x-stoplight": {
                    "id": "matter-attributes",
                    "name": "matter-attributes",
                    "public": true
                }
            },
            "webhook": {
                "title": "webhook",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "webhook",
                    "name": "webhook",
                    "public": true
                }
            },
            "event-type": {
                "title": "event-type",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "string"
                            },
                            "schema-version": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "event-type",
                    "name": "event-type",
                    "public": true
                }
            },
            "event-subscription": {
                "title": "event-subscription",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "disabled": {
                                "type": "boolean"
                            },
                            "disabled-reason": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "event-type": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "webhook": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "event-subscription",
                    "name": "event-subscription",
                    "public": true
                }
            },
            "event-notification": {
                "title": "event-notification",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "event-identifier": {
                                "type": "string"
                            },
                            "payload": {
                                "type": "string"
                            },
                            "fired-at": {
                                "type": "string"
                            },
                            "delivered-at": {
                                "type": "string"
                            },
                            "failed-at": {
                                "type": "string"
                            },
                            "failed-count": {
                                "type": "integer"
                            },
                            "created-at": {
                                "type": "string"
                            },
                            "updated-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "event-subscription": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "event-notification",
                    "name": "event-notification",
                    "public": true
                }
            },
            "jsonapi-object": {
                "title": "jsonapi-object",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "id",
                            "type"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "jsonapi-object",
                    "name": "jsonapi-object",
                    "public": true
                }
            },
            "legal-hold-schema": {
                "title": "legal-hold-schema",
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "use-cases": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "available": {
                                "type": "boolean"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold-schema-versions": {
                                "$ref": "#/components/schemas/jsonapi-array-object"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "legal-hold-schema",
                    "name": "legal-hold-schema",
                    "public": true
                }
            },
            "jsonapi-array-object": {
                "title": "jsonapi-array-object",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "type"
                            ],
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "jsonapi-array-object",
                    "name": "jsonapi-array-object",
                    "public": true
                }
            },
            "legal-hold-schema-version": {
                "title": "legal-hold-schema-version",
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "number"
                            },
                            "published-at": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold-schema": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "legal-hold-build-property": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "legal-hold-properties-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "acknowledgement-reminder-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "escalation-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "hold-notice-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "hold-release-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            },
                            "hold-reminder-template": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "legal-hold-schema-version",
                    "name": "legal-hold-schema-version",
                    "public": true
                }
            },
            "legal-hold-properties-template": {
                "title": "legal-hold-properties-template",
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "acknowledgement-reminder-enabled": {
                                "type": "boolean"
                            },
                            "acknowledgement-reminder-schedule": {
                                "type": "boolean"
                            },
                            "hold-reminder-enabled": {
                                "type": "string"
                            },
                            "hold-reminder-schedule": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold-schema-version": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "legal-hold-properties-template",
                    "name": "legal-hold-properties-template",
                    "public": true
                }
            },
            "message-template": {
                "title": "message-template",
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "body-title": {
                                "type": "string"
                            },
                            "body": {
                                "type": "string"
                            },
                            "copy-recipients": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold-schema-version": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "notice-template",
                    "name": "notice-template",
                    "public": true
                }
            },
            "acknowledgement-reminder-template": {
                "title": "acknowledgement-reminder-template",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/message-template"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {}
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "acknowledgement-reminder-template",
                    "name": "acknowledgement-reminder-template",
                    "public": true
                }
            },
            "collection": {
                "title": "collection",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "required": [
                            "specification"
                        ],
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "specification": {
                                "type": "object",
                                "properties": {
                                    "configuration": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "file",
                                                        "email"
                                                    ]
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "date-from": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "date-to": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "send-notification-on-create": {
                                "type": "boolean"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection-driver": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "collection-telemetry": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "created-by": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "custodian": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "export-jobs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/relationship"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "collection",
                    "name": "collection",
                    "public": true
                }
            },
            "collection-outputs": {
                "title": "Collection Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/collection"
                                }
                            },
                            "included": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "collection-outputs",
                    "name": "Collection Outputs",
                    "public": true
                }
            },
            "collection-telemetry": {
                "title": "collection-telemetry",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "workflow-status": {
                                "type": "string"
                            },
                            "workflow-status-text": {
                                "type": "string"
                            },
                            "identified-size": {
                                "type": "integer"
                            },
                            "identified-count": {
                                "type": "integer"
                            },
                            "size": {
                                "type": "integer"
                            },
                            "count": {
                                "type": "integer"
                            },
                            "exception-count": {
                                "type": "integer"
                            },
                            "file-type-aggregations": {
                                "type": "object",
                                "properties": {}
                            },
                            "percent-complete": {
                                "type": "number"
                            },
                            "estimated-complete-time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "transfer-speed": {
                                "type": "integer"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "collection-telemetry",
                    "name": "collection-telemetry",
                    "public": true
                }
            },
            "collection-exception": {
                "title": "Collection Exception",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "collection-exception",
                    "name": "collection exception",
                    "public": true
                }
            },
            "collection-exception-outputs": {
                "title": "Collection Exception Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/collection-exception"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "collection-exception-outputs",
                    "name": "Collection Exception Outputs",
                    "public": true
                }
            },
            "custodian-identified-item": {
                "title": "Custodian Identified Item",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "item-type": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "custodian-identified-item",
                    "name": "custodian identified item",
                    "public": true
                }
            },
            "custodian-identified-items-outputs": {
                "title": "Custodian Identified Item Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/custodian-identified-item"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "custodian-identified-items-outputs",
                    "name": "Collection Exception Outputs",
                    "public": true
                }
            },
            "custodian": {
                "title": "custodian",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "employee-id": {
                                "type": "string"
                            },
                            "department": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collections": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/relationship"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "custodian",
                    "name": "custodian",
                    "public": true
                }
            },
            "escalation-template": {
                "title": "escalation-template",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/message-template"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {}
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "escalation-template",
                    "name": "escalation-template",
                    "public": true
                }
            },
            "hold-notice-template": {
                "title": "hold-notice-template",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/message-template"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "required": [
                                    "include-question"
                                ],
                                "type": "object",
                                "properties": {
                                    "include-question": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-notice-template",
                    "name": "hold-notice-template",
                    "public": true
                }
            },
            "hold-release-template": {
                "title": "hold-release-template",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/message-template"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "include-active-holds": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-release-template",
                    "name": "hold-release-template",
                    "public": true
                }
            },
            "hold-reminder-template": {
                "title": "hold-reminder-template",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/message-template"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {}
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-reminder-template",
                    "name": "hold-reminder-template",
                    "public": true
                }
            },
            "jsonapi-array-request-object": {
                "title": "jsonapi-array-request-object",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "required": [
                                "type"
                            ],
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "jsonapi-array-request-object",
                    "name": "jsonapi-array-request-object",
                    "public": true
                }
            },
            "jsonapi-request-object": {
                "title": "jsonapi-request-object",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "type"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "jsonapi-request-object",
                    "name": "jsonapi-request-object",
                    "public": true
                }
            },
            "legal-hold-schema-input": {
                "title": "Legal Hold Schema Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-schema"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-input",
                    "name": "Legal Hold Schema Input",
                    "public": true
                }
            },
            "legal-hold-schema-output": {
                "title": "Legal Hold Schema Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/legal-hold-schema"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "last-made-available-at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-output",
                    "name": "Legal Hold Schema Output",
                    "public": true
                }
            },
            "legal-hold-schema-outputs": {
                "title": "Legal Hold Schema Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/legal-hold-schema"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "attributes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "last-made-available-at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-outputs",
                    "name": "Legal Hold Schema Outputs",
                    "public": true
                }
            },
            "legal-hold-schema-versions-input": {
                "title": "Legal Hold Schema Versions Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "relationships": {
                                        "type": "object",
                                        "properties": {
                                            "legal-hold-schema": {
                                                "$ref": "#/components/schemas/jsonapi-object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-versions-input",
                    "name": "Legal Hold Schema Versions Input",
                    "public": true
                }
            },
            "legal-hold-schema-versions-output": {
                "title": "Legal Hold Schema Versions Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-schema-version"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-versions-output",
                    "name": "Legal Hold Schema Versions Output",
                    "public": true
                }
            },
            "legal-hold-schema-versions-outputs": {
                "title": "Legal Hold Schema Versions Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/legal-hold-schema-version"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-schema-versions-outputs",
                    "name": "Legal Hold Schema Versions Outputs",
                    "public": true
                }
            },
            "legal-hold-properties-template-input": {
                "title": "Legal Hold Properties Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-properties-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-properties-template-input",
                    "name": "Legal Hold Properties Template Input",
                    "public": true
                }
            },
            "legal-hold-properties-template-output": {
                "title": "Legal Hold Properties Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-properties-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-properties-template-output",
                    "name": "Legal Hold Properties Template Output",
                    "public": true
                }
            },
            "acknowledgement-reminder-template-input": {
                "title": "Acknowledgement Reminder Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/acknowledgement-reminder-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "acknowledgement-reminder-template-input",
                    "name": "Acknowledgement Reminder Template Input",
                    "public": true
                }
            },
            "acknowledgement-reminder-template-output": {
                "title": "Acknowledgement Reminder Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "$ref": "#/components/schemas/acknowledgement-reminder-template-output-data"
                    }
                ],
                "x-stoplight": {
                    "id": "acknowledgement-reminder-template-output",
                    "name": "Acknowledgement Reminder Template Output",
                    "public": true
                }
            },
            "acknowledgement-reminder-template-output-data": {
                "title": "Acknowledgement Reminder Template Output Data",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/acknowledgement-reminder-template"
                    }
                },
                "x-stoplight": {
                    "id": "acknowledgement-reminder-template-output",
                    "name": "Acknowledgement Reminder Template Output",
                    "public": true
                }
            },
            "escalation-template-input": {
                "title": "Escalation Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-properties-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "escalation-template-input",
                    "name": "Escalation Template Input",
                    "public": true
                }
            },
            "escalation-template-output": {
                "title": "Escalation Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/escalation-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "escalation-template-output",
                    "name": "Escalation Template Output",
                    "public": true
                }
            },
            "hold-notice-template-input": {
                "title": "Hold Notice Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-notice-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-notice-template-input",
                    "name": "Hold Notice Template Input",
                    "public": true
                }
            },
            "hold-notice-template-output": {
                "title": "Hold Notice Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-notice-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-notice-template-output",
                    "name": "Hold Notice Template Output",
                    "public": true
                }
            },
            "hold-release-template-input": {
                "title": "Hold Release Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-release-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-release-template-input",
                    "name": "Hold Release Template Input",
                    "public": true
                }
            },
            "hold-release-template-output": {
                "title": "Hold Release Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-release-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-release-template-output",
                    "name": "Hold Release Template Output",
                    "public": true
                }
            },
            "hold-reminder-template-input": {
                "title": "Hold Reminder Template Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-reminder-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-reminder-template-input",
                    "name": "Hold Reminder Template Input",
                    "public": true
                }
            },
            "hold-reminder-template-output": {
                "title": "Hold Reminder Template Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/hold-reminder-template"
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-reminder-template-output",
                    "name": "Hold Reminder Template Output",
                    "public": true
                }
            },
            "legal-hold-properties-template-outputs": {
                "title": "Legal Hold Properties Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/legal-hold-properties-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "legal-hold-properties-template-outputs",
                    "name": "Legal Hold Properties Template Outputs",
                    "public": true
                }
            },
            "acknowledgement-reminder-template-outputs": {
                "title": "Acknowledgement Reminder Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/acknowledgement-reminder-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "acknowledgement-reminder-template-outputs",
                    "name": "Acknowledgement Reminder Template Outputs",
                    "public": true
                }
            },
            "escalation-template-outputs": {
                "title": "Escalation Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/escalation-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "escalation-template-outputs",
                    "name": "Escalation Template Outputs",
                    "public": true
                }
            },
            "hold-notice-template-outputs": {
                "title": "Hold Notice Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/hold-notice-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-notice-template-outputs",
                    "name": "Hold Notice Template Outputs",
                    "public": true
                }
            },
            "hold-release-template-outputs": {
                "title": "Hold Release Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/hold-release-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-release-template-outputs",
                    "name": "Hold Release Template Outputs",
                    "public": true
                }
            },
            "hold-reminder-template-outputs": {
                "title": "Hold Reminder Template Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/hold-reminder-template"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "hold-reminder-template-outputs",
                    "name": "Hold Reminder Template Outputs",
                    "public": true
                }
            },
            "message-attachment": {
                "title": "Message Attachment",
                "type": "object",
                "properties": {
                    "attributes": {
                        "required": [
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object"
                    }
                }
            },
            "message-attachment-input": {
                "title": "Message Attachment Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/message-attachment"
                            }
                        }
                    }
                ]
            },
            "message-attachment-outputs": {
                "title": "Message Attachment Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/message-attachment"
                                }
                            }
                        }
                    }
                ]
            },
            "message-attachment-output-detailed": {
                "title": "Message Attachment Detailed Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/message-attachment"
                                }
                            }
                        }
                    }
                ]
            },
            "collection-input": {
                "title": "Collection Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "required": [
                                            "specification"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "maxLength": 50,
                                                "type": "string"
                                            },
                                            "specification": {
                                                "type": "object",
                                                "properties": {
                                                    "configuration": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "file",
                                                                        "email"
                                                                    ]
                                                                },
                                                                "options": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "date-from": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "date-to": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "send-notification-on-create": {
                                                "type": "boolean"
                                            }
                                        }
                                    },
                                    "relationships": {
                                        "required": [
                                            "custodian",
                                            "matter"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "custodian": {
                                                "type": "object",
                                                "properties": {
                                                    "data": {
                                                        "$ref": "#/components/schemas/relationship"
                                                    }
                                                }
                                            },
                                            "matter": {
                                                "type": "object",
                                                "properties": {
                                                    "data": {
                                                        "$ref": "#/components/schemas/relationship"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "collection-input",
                    "name": "Collection Input",
                    "public": true
                }
            },
            "custodian-outputs": {
                "title": "Custodian Outputs",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/custodian"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "created-at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "collection-output": {
                "title": "Collection Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/collection"
                            },
                            "included": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "collection-outputs",
                    "name": "Collection Outputs",
                    "public": true
                }
            },
            "collection-update-input": {
                "title": "Collection Update Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "maxLength": 50,
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "x-stoplight": {
                    "id": "collection-input",
                    "name": "Collection Input",
                    "public": true
                }
            },
            "collection-driver": {
                "title": "Collection Driver",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "collection-driver-discoverybot-attributes": {
                "title": "Collection Driver DiscoveryBOT Attributes",
                "type": "object",
                "properties": {
                    "type": {
                        "pattern": "^DiscoveryBOT$",
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "access-id": {
                                "type": "string"
                            },
                            "access-code": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "export-job": {
                "title": "Export Job",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "status-text": {
                                "type": "string"
                            },
                            "created-at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "created-by": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            },
                            "export-destination": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/relationship"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "export-job-outputs": {
                "title": "Export Job Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/export-job"
                                }
                            }
                        }
                    }
                ]
            },
            "export-destination": {
                "title": "Export Destination",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "export-destination-outputs": {
                "title": "Export Destination Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/export-destination"
                                }
                            }
                        }
                    }
                ]
            },
            "legal-hold-build-property": {
                "title": "Legal Hold Build Property",
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "merge-fields": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "type": "string"
                                        },
                                        "variable": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "legal-hold-schema-version": {
                                "$ref": "#/components/schemas/jsonapi-object"
                            }
                        }
                    }
                }
            },
            "legal-hold-build-property-input": {
                "title": "Legal Hold Build Property Input",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-request-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-build-property"
                            }
                        }
                    }
                ]
            },
            "legal-hold-build-property-output": {
                "title": "Legal Hold Build Property Output",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/legal-hold-build-property"
                            }
                        }
                    }
                ]
            },
            "legal-hold-build-property-outputs": {
                "title": "Legal Hold Build Property Outputs",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/jsonapi-array-object"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/legal-hold-build-property"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "responses": {
            "forbidden": {
                "description": "The request was well-formed and the data was valid, but the server refuses to allow the request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "source": {
                                                "type": "object",
                                                "properties": {
                                                    "pointer": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "detail": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "example": {
                            "errors": [
                                {
                                    "source": {
                                        "pointer": "/data/attributes/id"
                                    },
                                    "detail": "unable to modify"
                                }
                            ]
                        }
                    }
                }
            },
            "not-found": {
                "description": "The server could not find the requested information. This may indicate either incorrect arguments or invalid authentication.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "example": {
                            "errors": [
                                "Not Found"
                            ]
                        }
                    }
                }
            },
            "unprocessable-entity": {
                "description": "The request was well-formed, but the supplied data was invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "source": {
                                                "type": "object",
                                                "properties": {
                                                    "pointer": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "detail": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "example": {
                            "errors": [
                                {
                                    "source": {
                                        "pointer": "/data/attributes/name"
                                    },
                                    "detail": "must be valid"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "parameters": {
            "limit": {
                "name": "limit",
                "in": "query",
                "description": "A limit on the number of elements returned. It can be between 1 and 100, with the default typically being 10 items.",
                "schema": {
                    "minimum": 0,
                    "type": "number",
                    "default": 10.0
                }
            },
            "offset": {
                "name": "offset",
                "in": "query",
                "description": "When using pagination, you should pass the number of items you would like to skip (ie, the number of items already received from a previous call).",
                "schema": {
                    "minimum": 0,
                    "type": "number",
                    "default": 0.0
                }
            },
            "matter_id": {
                "name": "matter_id",
                "in": "query",
                "description": "Only return items that belong to this matter",
                "schema": {
                    "minimum": 0,
                    "type": "number"
                }
            },
            "folder_id": {
                "name": "folder_id",
                "in": "query",
                "description": "Only return items that belong to this company",
                "schema": {
                    "minimum": 0,
                    "type": "number"
                }
            }
        },
        "securitySchemes": {
            "X-AUTH-TOKEN": {
                "type": "apiKey",
                "description": "TotalDiscovery site token.",
                "name": "X-AUTH-TOKEN",
                "in": "header"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://tddc.auth.us-east-1.amazoncognito.com/oauth2/authorize",
                        "scopes": {}
                    }
                }
            }
        }
    }
}