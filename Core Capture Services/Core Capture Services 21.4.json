{
    "openapi": "3.0.1",
    "info": {
        "title": "Core Capture Services",
        "description": "OpenText Core Capture Services are a set of RESTful web service interfaces that provides capture functionality. Being developed in a purely RESTful style, Core Capture Services are easier to consume for the purposes of writing custom clients.\n\nCore Capture Services identifies resources by Uniform Resource Identifiers (URIs). It defines specific media types to represent resources and drives application state transfers by using link relations. It uses a limited number of HTTP standard methods (GET, POST, and DELETE) to manipulate these resources over the HTTP protocol.\n\nCore Capture Services (hereafter simply called, \"service\") supports only the JSON format for resource representation. JavaScript Object Notation (JSON) is a lightweight data interchange format based on a subset of the JavaScript Programming Language standard.",
        "version": "21.4"
    },
    "servers": [
        {
            "url": "https://capture.ot2.opentext.com/cp-rest/v2",
            "description": "OpenText OT2 US Production"
        },
        {
            "url": "https://capture.ot2.opentext.eu/cp-rest/v2",
            "description": "OpenText OT2 EU Production"
        },
        {
            "url": "https://api.developer.opentext.com/capture/cp-rest/v2",
            "description": "OpenText Developer"
        }
    ],
    "tags": [
        {
            "name": "Home",
            "description": "The Home Document is an entry point to the Core Capture Services. It is available to any caller. It is retrieved by performing an HTTP GET on the base installation path."
        },
        {
            "name": "Session",
            "description": "The Session resource will provide the URI for ending the session. This clears all the files and metadata in your session and allows for more efficient processing for future sessions related to your subscription. Some data centers have limits on the number of open sessions you can have. So, when you are done with your session, then it is important to end it. This will not invalidate your access tokens. So, if you call the service with the same service again after ending the session, a new session will automatically be created. Every token associated with the same refresh token shares a unique identifier inside the token. There is a one-to-one relationship between that unique identifier and a session on the server. So if you have been calling the services with an access token and then obtain another from the same refresh token, it will still be associated with the same session."
        },
        {
            "name": "Tables",
            "description": "The server maintains different tables that provide information about key pieces of data to authenticated users. These tables are provided in the Tables Resource."
        },
        {
            "name": "Document Types",
            "description": "This resource provides a list of Document Types available in the system. Document Types are created using the Designer."
        },
        {
            "name": "Files",
            "description": "The Files resource is used to create a stage file. Real-Time Services can use stage files referenced in Service Requests and so can Batches. The benefit of creating a stage file is that it allows them to be referenced in more than one Service Request for any Real-Time Service as well as in create and export batch. In addition, a stage file can be sent whole or chunked using binary or base64 encoding to the server to allow the client better control over sending large files (see below for an example). Responses to file uploads will always provide a unique file ID in which to reference the file for later use in Service Requests. All stage files created by uploading files to Server or by Real-Time Services returning the resulting files, must be deleted when they are no logner required."
        },
        {
            "name": "Batch",
            "description": "Through the Capture Service you can create batches on server to export them to your backend server. To accomplish this you submit files to server, create a Batch with values in it and then submit the Batch to server to export it to your backend server. Supported backend servers to export Batches are any CMIS compliant content server, OpenText Intelligent Capture Server, FTP server, and OpenText Document ApplicationXtender server."
        },
        {
            "name": "Real-Time Services",
            "description": "Real-Time Services are a collection of special service operations for authenticated users that can be performed immediately on data you submit\nin an ad hoc fashion without requiring the construction of a workflow. Each of these Real-Time Services will take a Service Request, which is a set of\nService Properties along with the Request Item information. The Service Properties describe the options that a service should use when performing its\noperation. The Request Item information describes all of the data and files that the Real-Time Service should perform its operation on.\n\nA Service Request can simply be a collection of files, or files and data, or a hierarchical collection of files and/or data. It can be as simple or as\ncomplex as needed for the Real-Time Service you are using. The Service Request is performed by a single POST to the Services resource URI. If you need\nfile chunking or you want to use the same file for many different Service Requests, then upload the files prior to submitting the Service Request by\nuploading them to the Files resource. Then, you can reference the file IDs for those uploaded files in the Service Request.\n\n**Service Properties**\n\nEvery Service Request needs to include the Service Properties appropriate for the service. These define the options you want the Real-Time Service to use\nwhen performing its operation. These are provided in the serviceProps property. The list of Real-Time Services that are available along with their supported\nService Properties are listed in the Real-Time Service Descriptions section. Each of the Real-Time Services provide a description of its operation, a list of\nService Properties that can be used, and information about what type of data is expected."
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "The Home Document is an entry point to the Core Capture Services.",
                "description": "The Home Document is an entry point to the Core Capture Services. It is available to any caller. Its main purposes it to provide discovery of the URIs necessary to interact with the service. It is retrieved by performing an HTTP GET on the base installation path. So for example if the REST service was installed into https://{host}/cp-rest/v2, then performing a GET on this URI would return the Home Document. Its main purposes is to provide discovery of the URIs necessary to interact with the service. All clients must start from the Home Document and follow the hrefs given in the link relations to the resources desired. This is important to ensure that your client applications will always work regardless of the URI changes that may take place under different deployment configurations of the service.",
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "urn:eim:linkrel:session": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Session resource to login or logoff from the service.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "urn:eim:linkrel:tables": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Tables resource. This resource allows you access to the Tables that are available in the system.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "urn:eim:linkrel:data-batches": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Batches resource. This resource allows you access to create and export a batch.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "urn:eim:linkrel:files": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Files resource. This resource allows you to generate stage files for Service Requests.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "urn:eim:linkrel:services": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Services resource. This resource allows you to generate Service Requests for Real-Time Services.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "urn:eim:linkrel:doctypes": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Document Types resource. This resource allows you access to the Document Types that are available in the system.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "about": {
                                                    "type": "object",
                                                    "description": "Provides an href to the Product Information resource. This resource displays product information about the Services.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "oauth2-token": {
                                                    "type": "object",
                                                    "description": "Provides href to generate token to authorize with server.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "oauth2-authorize": {
                                                    "type": "object",
                                                    "description": "Provides href to authorize user.",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "_links": {
                                        "urn:eim:linkrel:session": {
                                            "href": "https://{host}/cp-rest/v2/session"
                                        },
                                        "urn:eim:linkrel:tables": {
                                            "href": "https://{host}/cp-rest/v2/session/tables"
                                        },
                                        "urn:eim:linkrel:data-batches": {
                                            "href": "https://{host}/cp-rest/v2/session/batches"
                                        },
                                        "urn:eim:linkrel:files": {
                                            "href": "https://{host}/cp-rest/v2/session/files"
                                        },
                                        "urn:eim:linkrel:services": {
                                            "href": "https://{host}/cp-rest/v2/session/services"
                                        },
                                        "urn:eim:linkrel:doctypes": {
                                            "href": "https://{host}/cp-rest/v2/session/doctypes"
                                        },
                                        "oauth2-token": {
                                            "href": "https://{auth-host}/oauth/token"
                                        },
                                        "oauth2-authorize": {
                                            "href": "https://{auth-host}/oauth/authorize"
                                        },
                                        "about": {
                                            "href": "https://{host}/cp-rest/v2/about"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/about": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Provides product version information.",
                "description": "This resource provides product information about the Services installation to authenticated users.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "returnStatus": {
                                            "$ref": "#/components/schemas/returnStatusBody"
                                        },
                                        "serviceName": {
                                            "type": "string",
                                            "description": "Name of the service."
                                        },
                                        "productName": {
                                            "type": "string",
                                            "description": "Name of the Product"
                                        },
                                        "copyright": {
                                            "type": "string",
                                            "description": "Copyright string"
                                        },
                                        "serviceVersion": {
                                            "type": "string",
                                            "description": "Four part version information for the Service."
                                        },
                                        "buildVersion": {
                                            "type": "string",
                                            "description": "Four part version for the build."
                                        },
                                        "productVersion": {
                                            "type": "string",
                                            "description": "Four part product version."
                                        },
                                        "schemaVersion": {
                                            "type": "string",
                                            "description": "Table schema version (internal)."
                                        },
                                        "designerVersion": {
                                            "type": "string",
                                            "description": "Designer tool version."
                                        },
                                        "serverDate": {
                                            "type": "string",
                                            "description": "Server date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z)."
                                        },
                                        "serverId": {
                                            "type": "string",
                                            "description": "The server id that serviced the request."
                                        },
                                        "minDesignerVersion": {
                                            "type": "string",
                                            "description": "Minimum required Designer tool version."
                                        }
                                    }
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sb29a7dd631e94af5a5439148ea7a5bffHS"
                                    },
                                    "serviceName": "Open Text Core Capture Services",
                                    "productName": "Open Text Core Capture Services",
                                    "copyright": "Copyright © 2020 Open Text. All rights reserved. This software is protected, without limitation, by copyright law and international treaties. Use of this software and the intellectual property contained therein is expressly limited to the terms and conditions of the License Agreement under which it is provided by or on behalf of Open Text.",
                                    "serviceVersion": "2.6.0.0",
                                    "buildVersion": "20.2.425.7585",
                                    "productVersion": "20.2.0.0",
                                    "schemaVersion": "2.6.0.0",
                                    "designerVersion": "20.2.52",
                                    "serverDate": "2020-04-27T19:52:19.4462961Z",
                                    "serverId": "WS-S8c7ec8597c2a4e13bc3db7b7335816fb",
                                    "minDesignerVersion": "18.3.0"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Retrieves the Session resource.",
                "description": "The Session resource will provide the URI for ending the session. This clears all the files and metadata in your session and allows for more efficient processing for future sessions related to your subscription.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "returnStatus": {
                                            "$ref": "#/components/schemas/returnStatusBody"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Localized based on Accept-Language."
                                        },
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "$ref": "#/components/schemas/linkHref"
                                                },
                                                "urn:eim:linkrel:logoff": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "description": "This is the link relation that references the URI to use for performing a logoff. It allows for ending the session and clearing the session files."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S0fe013423a0d4fd9be9ad906f5fcce6aIZ"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session",
                                    "title": "Session",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session"
                                        },
                                        "urn:eim:linkrel:logoff": {
                                            "href": "https://{host}/cp-rest/v2/session"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Session"
                ],
                "summary": "Deletes your session data.",
                "description": "As long as the session is still active, deleting your session will return HTTP status code 200. If the session has expired, then a 401 Unauthorized response is sent by the server.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged off",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/tables": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Returns a list of available tables for the given environment.",
                "description": "The server maintains different tables that provide information about key pieces of data to authenticated users.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Env",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/env"
                        },
                        "example": "D",
                        "required": true
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponseForBatches"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "collection": {
                                                            "type": "array",
                                                            "items": {
                                                                "allOf": [
                                                                    {
                                                                        "$ref": "#/components/schemas/baseEmbedded"
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "title": {
                                                                                "type": "string",
                                                                                "description": "Display name of the table."
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sa6c3aec13763493588d3bfeb47249333IS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/tables",
                                    "title": "Tables",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/tables"
                                        }
                                    },
                                    "_embedded": {
                                        "collection": [
                                            {
                                                "id": "https://{host}/cp-rest/v2/session/tables/exportprofiles",
                                                "title": "ExportProfiles",
                                                "updated": "2017-01-11T23:28:59.8787474Z",
                                                "_links": {
                                                    "self": {
                                                        "href": "https://{host}/cp-rest/v2/session/tables/exportprofiles"
                                                    }
                                                }
                                            },
                                            {
                                                "id": "https://{host}/cp-rest/v2/session/tables/imageprocessingprofiles",
                                                "title": "ImageProcessingProfiles",
                                                "updated": "2017-01-11T23:28:59.8787474Z",
                                                "_links": {
                                                    "self": {
                                                        "href": "https://{host}/cp-rest/v2/session/tables/imageprocessingprofiles"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/tables/{tableId}": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Returns the table identified by tableId for the given environment.",
                "description": "The Table Resource pertains to a specific table from the set of available tables on the server.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tableId",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "exportProfiles",
                                "imageProcessingProfiles"
                            ]
                        },
                        "required": true
                    },
                    {
                        "name": "view",
                        "description": "Fields or properties to return.\n\n**Syntax:** ?view=<:view-name | comma-delim-field-list>\n\n**Note:** A view is followed by either a view name preceded by a colon or a list of fields. These are mutually exclusive. Two predefined views are provided - \":all\" and \":default\". Both of these are equivalent and will return all columns for the data. If this query parameter is not provided, then the result will include all column data.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "name,createtime"
                    },
                    {
                        "name": "sort",
                        "description": "Used to sort the result.\n\n**Syntax:** ?sort=<field [desc | asc]>[,REPEATABLE]\n\n**Note:** Sort is followed by a comma-separated list of fields and each field can have an optional sort order separated by a space. If the sort order is not specified, then the default sort order is ASC. If this query parameter is not provided at all, then the result will be sorted based on its first column in ascending order.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "createtime asc"
                    },
                    {
                        "name": "env",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/env"
                        },
                        "example": "D"
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/tableItemContent"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S60ef74551ec74116b91f94e491d1d0edIS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/tables/exportprofiles",
                                    "title": "ExportProfile",
                                    "updated": "2016-10-11T23:01:20.5166678Z",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/tables/exportprofiles?env=D"
                                        }
                                    },
                                    "content": {
                                        "id": "exportprofiles",
                                        "tableName": "ExportProfile",
                                        "env": "D",
                                        "fieldNames": [
                                            "Id",
                                            "Name",
                                            "Category",
                                            "LastUpdate",
                                            "Env",
                                            "HasImage"
                                        ],
                                        "rows": [
                                            [
                                                "exportprofile-create_pdf_documents",
                                                "Create PDF Documents",
                                                "ExportProfile",
                                                "2016-06-03T00:18:32.9142549Z",
                                                "D",
                                                false
                                            ],
                                            [
                                                "exportprofile-newloanapplication",
                                                "NewLoanApplication",
                                                "ExportProfile",
                                                "2016-05-17T17:10:39.8837938Z",
                                                "D",
                                                false
                                            ],
                                            [
                                                "exportprofile-sample_advanced_recognition_demo",
                                                "Sample Advanced Recognition Demo",
                                                "ExportProfile",
                                                "2016-09-24T00:32:28.5453643Z",
                                                "D",
                                                false
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/doctypes": {
            "get": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Returns the list of available Document Types for the given environment.",
                "description": "This operation returns a feed listing all of the Document Types. Document Types are created using the Designer.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Env",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/env"
                        },
                        "example": "D"
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "collection": {
                                                            "type": "array",
                                                            "items": {
                                                                "allOf": [
                                                                    {
                                                                        "$ref": "#/components/schemas/baseEmbedded"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "title": {
                                                                                "type": "string",
                                                                                "description": "Not localized. Name of the Document Type."
                                                                            },
                                                                            "env": {
                                                                                "$ref": "#/components/schemas/env"
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S8ac9a1e5c5974e9bbe210e7ed32b5e77IS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/doctypes",
                                    "title": "DocTypes",
                                    "updated": "2017-01-13T22:54:26.7123724Z",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/doctypes?env=D"
                                        }
                                    },
                                    "_embedded": {
                                        "collection": [
                                            {
                                                "id": "https://{host}/cp-rest/v2/session/doctypes/advancedinvoice",
                                                "title": "AdvancedInvoice",
                                                "updated": "2017-01-13T00:15:12.5208242Z",
                                                "env": "D",
                                                "_links": {
                                                    "self": {
                                                        "href": "https://{host}/cp-rest/v2/session/doctypes/advancedinvoice?env=D"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/doctypes/{docType}": {
            "get": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Returns the Document Type identified by docType for the given environment.",
                "description": "This resource retrieves a specific Document Type. A Document Type is created using the Designer.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "docType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Env",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/env"
                        },
                        "example": "D"
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "description": "Name of the Document Type resource."
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/docItemContent"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S9d85aaf9fd134654be88edc11906fd53IS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/doctypes/CorpSource",
                                    "title": "CorpSource",
                                    "updated": "2016-08-24T22:27:02.1726288Z",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/doctypes/CorpSource?env=D"
                                        }
                                    },
                                    "content": {
                                        "id": "CorpSource",
                                        "name": "CorpSource",
                                        "locale": "",
                                        "description": "",
                                        "project": "Default",
                                        "env": "D",
                                        "fields": [
                                            {
                                                "name": "InvoiceNumber",
                                                "isArray": false,
                                                "indexFieldType": "Number",
                                                "sectionName": "SectionTop",
                                                "indexLevel": 1,
                                                "confirmKind": "AlwaysConfirm",
                                                "isReadOnly": false,
                                                "isRequired": false,
                                                "minValue": null,
                                                "maxValue": null,
                                                "restrictionMask": "",
                                                "viewFormat": "#.#########",
                                                "checkDateFromNow": false,
                                                "uiControlInfo": {
                                                    "controlType": "TextBox",
                                                    "labelText": "Invoice No.",
                                                    "tooltip": "",
                                                    "choices": [],
                                                    "multiLine": false,
                                                    "rectangle": {
                                                        "left": 610,
                                                        "top": 110,
                                                        "width": 140,
                                                        "height": 20
                                                    },
                                                    "labelRectangle": {
                                                        "left": 535,
                                                        "top": 109,
                                                        "width": 74,
                                                        "height": 20
                                                    }
                                                },
                                                "isPopulationTrigger": false,
                                                "optionsPopulatedBy": [],
                                                "extractFirstValue": true,
                                                "isCalculationTarget": false,
                                                "sampleRect": "",
                                                "samplePageId": ""
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/files": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Creates a stage file.",
                "description": "You can only create one stage file at a time. Upon the first POST a unique fileId will be created by the server. File data can be posted either in base64 encoding as a JSON post or as a binary to the server.\n\nIf you need to chunk this in pieces to the server, then subsequent requests must be made to the URI represented by the src property or the URI provided by the Location header returned from the first chunk. Additional chunks append to the file and you can always retry/re-post the last chunk. The chunks need to be posted without gaps in order to be successful.\n\nThere are two ways to create a stage file:\n\n- Create the stage file using a JSON post with base64 encoding.\n\n- Post the file as binary using the appropriate Content-Type.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/inlineFileRequestBody"
                            },
                            "example": {
                                "data": "VGhpcyBpcyBvbmx5IGFuIGV4YW1wbGUgb2YgdGhlIGZpcnN0IGNodW5rLg",
                                "contentType": "image/jpeg",
                                "offset": 0
                            }
                        },
                        "application/msword": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/rtf": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "image/*": {
                            "schema": {
                                "type": "string"
                            },
                            "example": {
                                "value": "\"src\":\"/C:/test.tif\""
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200FileResponse"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Files"
                ],
                "summary": "Deletes all stage files.",
                "description": "This call deletes all stage files in the session including those returned by service calls. Once called, the deleted files will no longer be available.\n\nDeleting files accepts a query string parameter, filter, as shown below. Currently, the only value this parameter supports is *, which means all files. This is the only filter value currently supported by the Services and provides for the deletion of all the files in the session.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "*"
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200DeleteResponse"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/files/{fileId}": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Retrieves the file identified by the fileId.",
                "description": "Retrieving an actual file that was previously POSTed is simply performed by executing a GET on the files URI with the fileId as shown below. This will return the actual file data.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fileId",
                        "description": "The id of the file",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Appends or retries a stage file chunk.",
                "description": "Chunking a file in pieces to the server requires that the POST be made to the URI represented by the src property or the URI provided by the Location header returned from the first chunk. Additional chunks append to the file and you can always retry/re-post the last chunk. Chunking requires the data for the file to be sent in base64 or binary encoding. The chunks need to be posted without gaps in order to be successful.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fileId",
                        "description": "The id of the file",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "description": "Supported response media types",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/msword",
                                "application/octet-stream",
                                "application/rtf",
                                "application/pdf",
                                "image/jpeg",
                                "image/png",
                                "image/tiff",
                                "text/plain"
                            ]
                        }
                    },
                    {
                        "name": "Content-Range",
                        "description": "When using binary upload and chunking the upload, use this parameter to provide the range of bytes being uploaded. For e.g. \"bytes 0-19999/60200\", \"bytes 20000-60199/60200\"",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/inlineFileRequestBody"
                            },
                            "example": {
                                "data": "VGhpcyBpcyBvbmx5IGFuIGV4YW1wbGUgb2YgdGhlIHNlY29uZCBjaHVuaw",
                                "contentType": "image/jpeg",
                                "offset": 59
                            }
                        },
                        "application/msword": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/rtf": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "Binary Data"
                        },
                        "image/*": {
                            "schema": {
                                "type": "string"
                            },
                            "example": {
                                "value": "\"src\":\"/C:/test.tif\""
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200FileResponse"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Files"
                ],
                "summary": "Deletes a stage file.",
                "description": "An individual file can be deleted. Once deleted, the file can no longer be accessed.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fileId",
                        "description": "The id of the file",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200DeleteResponse"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/batches": {
            "post": {
                "tags": [
                    "Batch"
                ],
                "summary": "Creates and exports a batch.",
                "description": "The Create and Export Batch operation is the last call required to create a batch and submit it to your backend server. First submit all image files to server, then you can use the returned file reference ids to reference files in the Batch nodal information. You can also use the same file reference ids returned by Real-Time service calls.\n\nThe batch name that you use to create a batch has to be unique when being imported into your backend server. To help you accomplish creating unique names you can supply for the \"batchName\" JSON property any Capture Services Format Expression function (see the Designer Documentation). There are also two additional format tokens you can use for providing unique names - {NextIndex} and {NextId}\n\n**{NextIndex}** - This will provide a 64 bit integer number that is unique. Example: \"batchName\":\"MyBatch_{NextIndex}\" produces on the server MyBatch_1026000000002\n\n**{NextId}** - This will provide a valid Batch name string that is unique. Example: \"batchName\":\"MyBatch_{NextId}\" produces on the server MyBatch_324_1\n\nAny supported static function in the Capture Services Expression Language (see the Designer Documentation). [<any text>]{[<Format Specification>|]<Expression>}[<any text>] - Using the expression language functions can allow the user of a GUID or unique time string to be a part of the Batch Name. Example: \"batchName\":\"MyBatch_{Tddhhmmss|Now()}_{NextIndex}\" produces on the server, MyBatch_09064934_1026000000003. Or \"batchName\":\"MyBatch_{S|CreateGuid(0)}\" produces on the server, MyBatch_82fcd238-2fb7-44ac-9acc-a13ce406241d\n\n**Document type and UimData values in batch:**\n\nFor composing export profile and exporting UimData values, Document type and UimData values must at batch level mentioned below with given names as below.\n\n**Batch – Level 7:**\n\nvalueName = \"Profile \"\n\nvalueType = \"string\"\n\nvalue = // Name of the profile.\n\n**Document – Level 1:**\n\nvalueName = \"UimDocumentType\"\n\nvalueType = \"string\"\n\nvalue = // This should be a string specifying the document type name.\n\nvalueName = \"UimData\"\n\nvalueType = \"uimdata\"\n\nvalue = // This should be a UIM Data JSON Object\n\nvalueName = \"OutputFile \"\n\nvalueType = \" file\"\n\nvalue = // File id for the original PDF to be available for export.\n\n**Page – Level 0:**\n\nvalueName = \"OutputImage\"\n\nvalueType = \"file\"\n\nvalue = // file id for the image to be exported\n\nvalueName = \"Backside\"\n\nvalueType = \"int\"\n\nvalue = // 0 (front) or 1 (back) to indicate whether the image is a backside image.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "env": {
                                        "$ref": "#/components/schemas/env"
                                    },
                                    "captureFlow": {
                                        "type": "string",
                                        "description": "CaptureFlow name. Required only of exportType is \"IAServer\""
                                    },
                                    "batchName": {
                                        "type": "string",
                                        "description": "Required string. Batch name (schema available). Has to be unique."
                                    },
                                    "batchRootLevel": {
                                        "type": "integer",
                                        "description": "Required Integer. 0 based, must be between 1 and 7.",
                                        "minimum": 1,
                                        "maximum": 7
                                    },
                                    "batchPriority": {
                                        "type": "integer",
                                        "description": "Batch priority. It must be between 0 and 100. If not supplied, it will default to 50. This is only used when exporting to an Intelligent Capture Server",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "default": 50
                                    },
                                    "exportType": {
                                        "type": "string",
                                        "enum": [
                                            "AutoFormatLocal",
                                            "AutoFormatFtp",
                                            "Custom",
                                            "IAServer"
                                        ],
                                        "default": "AutoFormatLocal",
                                        "description": "One of \"AutoFormatLocal\", \"AutoFormatFtp\", \"Custom\", \"IAServer\". Default value is \"AutoFormatLocal\"."
                                    },
                                    "pdfGeneration": {
                                        "type": "string",
                                        "enum": [
                                            "None",
                                            "OnePerDocument",
                                            "OnePerFolder"
                                        ],
                                        "default": "None",
                                        "description": "One of \"None\", \"OnePerDocument\", \"OnePerFolder\". Default is \"None\"."
                                    },
                                    "ftpConnection": {
                                        "type": "string",
                                        "description": "Required only if exportType is \"AutoFormatFtp\"."
                                    },
                                    "autoFormatExcludeImages": {
                                        "type": "boolean",
                                        "description": "Required if exportType is \"AutoFormatLocal\" or \"AutoFormatFtp\"."
                                    },
                                    "iAServerConnection": {
                                        "type": "string",
                                        "description": "Required only if exportType is \"IAServer\"."
                                    },
                                    "machineId": {
                                        "type": "string",
                                        "description": "Id of machine creating this batch."
                                    },
                                    "dispatch": {
                                        "type": "string",
                                        "description": "One \"S\" or \"A\", Default is \"S\". S – Synchronous, A - Asynchronous",
                                        "enum": [
                                            "S",
                                            "A"
                                        ],
                                        "default": "A"
                                    },
                                    "nodes": {
                                        "type": "array",
                                        "description": "Required. Nodes are processed in given order.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "nodeId": {
                                                    "type": "integer",
                                                    "description": "Required integer. Has to be non-zero."
                                                },
                                                "parentId": {
                                                    "type": "integer",
                                                    "description": "Required integer. 0 for parentId implies root node. If parentId is -1, then this means delete the node and its children."
                                                }
                                            }
                                        }
                                    },
                                    "values": {
                                        "type": "array",
                                        "description": "Values are processed in the given order and the last writer wins.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "nodeId": {
                                                    "type": "integer",
                                                    "description": "Required integer. The nodeId must exist."
                                                },
                                                "valueName": {
                                                    "type": "string",
                                                    "description": "Required string. The name of the value."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "Required object. See valueType for valid types."
                                                },
                                                "valueType": {
                                                    "type": "string",
                                                    "description": "Required string. Must be one of \"int\", \"double\", \"string\", \"bool\", \"datetime\", \"file\", or \"uimdata\". \"int\" – value can be integer or string. \"double\" - value can be either number or literal invariant culture string. \"bool\" - value must be sent as literal \"true\" or \"false\". \"datetime\" - value must be ISO 8601 string. \"file\" - value must be sent as a base64 encoded string or a valid fileId. \"uimdata\" – value must be the UimData JSON object.",
                                                    "enum": [
                                                        "int",
                                                        "double",
                                                        "string",
                                                        "bool",
                                                        "datetime",
                                                        "file",
                                                        "uimdata"
                                                    ]
                                                },
                                                "offset": {
                                                    "type": "integer",
                                                    "description": "Optional integer. Used only if valueType is \"file\". Offset is used to add or replace a chunk. Chunks must be added without gaps. First chunk must start at offset 0."
                                                },
                                                "fileExtension": {
                                                    "type": "string",
                                                    "description": "Optional string. Used if valueType=\"file\" and offset is 0. Examples \"doc\", \"png\", \"tif\", \"tiff\", \"jpg\"."
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "env",
                                    "batchName",
                                    "batchRootLevel",
                                    "nodes"
                                ]
                            },
                            "example": {
                                "captureFlow": "",
                                "exportProfile": "",
                                "batchName": "Batch_{NextId}",
                                "batchRootLevel": 3,
                                "env": "D",
                                "pdfGeneration": "None",
                                "exportType": "AutoFormatLocal",
                                "ftpConnection": "",
                                "autoFormatExcludeImages": false,
                                "dispatch": "S",
                                "iAServerConnection": "",
                                "nodes": [
                                    {
                                        "nodeId": 1,
                                        "parentId": 0
                                    },
                                    {
                                        "nodeId": 2,
                                        "parentId": 1
                                    },
                                    {
                                        "nodeId": 3,
                                        "parentId": 2
                                    },
                                    {
                                        "nodeId": 4,
                                        "parentId": 2
                                    },
                                    {
                                        "nodeId": 5,
                                        "parentId": 2
                                    },
                                    {
                                        "nodeId": 6,
                                        "parentId": 2
                                    },
                                    {
                                        "nodeId": 7,
                                        "parentId": 1
                                    },
                                    {
                                        "nodeId": 8,
                                        "parentId": 7
                                    },
                                    {
                                        "nodeId": 9,
                                        "parentId": 7
                                    },
                                    {
                                        "nodeId": 10,
                                        "parentId": 7
                                    },
                                    {
                                        "nodeId": 11,
                                        "parentId": 0
                                    },
                                    {
                                        "nodeId": 12,
                                        "parentId": 11
                                    },
                                    {
                                        "nodeId": 13,
                                        "parentId": 12
                                    },
                                    {
                                        "nodeId": 14,
                                        "parentId": 12
                                    },
                                    {
                                        "nodeId": 15,
                                        "parentId": 12
                                    },
                                    {
                                        "nodeId": 16,
                                        "parentId": 12
                                    },
                                    {
                                        "nodeId": 17,
                                        "parentId": 11
                                    },
                                    {
                                        "nodeId": 18,
                                        "parentId": 17
                                    },
                                    {
                                        "nodeId": 19,
                                        "parentId": 17
                                    },
                                    {
                                        "nodeId": 20,
                                        "parentId": 17
                                    }
                                ],
                                "values": [
                                    {
                                        "nodeId": 1,
                                        "valueName": "BooleanFalse",
                                        "value": false,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 1,
                                        "valueName": "FloatValue",
                                        "value": 20002.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 1,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.3956569Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 1,
                                        "valueName": "IntLevel",
                                        "value": 3,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 1,
                                        "valueName": "DirectoryName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 2,
                                        "valueName": "BooleanTrue",
                                        "value": true,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 2,
                                        "valueName": "FloatValue",
                                        "value": 10002.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 2,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.3956569Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 2,
                                        "valueName": "IntL54evel",
                                        "value": 2,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 2,
                                        "valueName": "DirectoryName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\Pages",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 3,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\Pages\\AfterAnnotations.tif",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 3,
                                        "valueName": "OutputImage",
                                        "value": "F_83fe504ee8dd45a5ab726d76e55ebf0fDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "tif"
                                    },
                                    {
                                        "nodeId": 4,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\Pages\\AnnotationsEIndex.tif",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 4,
                                        "valueName": "OutputImage",
                                        "value": "F_d486352f27b047e098388591cfb86d71DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "tif"
                                    },
                                    {
                                        "nodeId": 5,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\Pages\\JPEG_24BitColor_ProgressiveJpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 5,
                                        "valueName": "OutputImage",
                                        "value": "F_63a204692bb34103966692a5cfe7e026DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 6,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\Pages\\JPEG_24BitColor_Sequential Jpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 6,
                                        "valueName": "OutputImage",
                                        "value": "F_ed397d5c08284795882e6e4eab7db97fDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 7,
                                        "valueName": "BooleanFalse",
                                        "value": false,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 7,
                                        "valueName": "FloatValue",
                                        "value": 10007.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 7,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.6472619Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 7,
                                        "valueName": "IntLevel",
                                        "value": 2,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 7,
                                        "valueName": "DirectoryName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\pages2",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 8,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\pages2\\NVC_JPEG_8Bit_Gray_Sequential Jpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 8,
                                        "valueName": "OutputImage",
                                        "value": "F_2cc8878d863c41c1b84b9b0fcb73c45fDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 9,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\pages2\\PNG_8bit_2color_transparent.png",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 9,
                                        "valueName": "OutputImage",
                                        "value": "F_944faeac690a462f920d3c4055815e4bDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "png"
                                    },
                                    {
                                        "nodeId": 10,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc\\pages2\\TestUimBestBerryCompany.png",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 10,
                                        "valueName": "OutputImage",
                                        "value": "F_4cd72779dcf64257bb247542be90dbc9DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "png"
                                    },
                                    {
                                        "nodeId": 11,
                                        "valueName": "BooleanFalse",
                                        "value": false,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 11,
                                        "valueName": "FloatValue",
                                        "value": 20022.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 11,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.7252634Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 11,
                                        "valueName": "IntLevel",
                                        "value": 3,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 11,
                                        "valueName": "DirectoryName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 12,
                                        "valueName": "BooleanTrue",
                                        "value": true,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 12,
                                        "valueName": "FloatValue",
                                        "value": 10012.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 12,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.7252634Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 12,
                                        "valueName": "IntLevel",
                                        "value": 2,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 12,
                                        "valueName": "DirectoryName55",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\Pages",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 13,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\Pages\\AfterAnnotations.tif",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 13,
                                        "valueName": "OutputImage",
                                        "value": "F_5c1387eb0db649ba986eb79c0da24060DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "tif"
                                    },
                                    {
                                        "nodeId": 14,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\Pages\\AnnotationsEIndex.tif",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 14,
                                        "valueName": "OutputImage",
                                        "value": "F_d48cd08875ba4634b83aa8c4b3679351DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "tif"
                                    },
                                    {
                                        "nodeId": 15,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\Pages\\JPEG_24BitColor_ProgressiveJpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 15,
                                        "valueName": "OutputImage",
                                        "value": "F_967cf342b1034596bffce852785a8301DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 16,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\Pages\\JPEG_24BitColor_Sequential Jpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 16,
                                        "valueName": "OutputImage",
                                        "value": "F_11fc88e5e3c24f8fb740dec20273b730DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 17,
                                        "valueName": "BooleanFalse",
                                        "value": false,
                                        "valueType": "bool",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 17,
                                        "valueName": "FloatValue",
                                        "value": 10017.2344,
                                        "valueType": "float",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 17,
                                        "valueName": "CurrentTime",
                                        "value": "2016-08-16T23:57:28.9436676Z",
                                        "valueType": "datetime",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 17,
                                        "valueName": "IntLevel",
                                        "value": 2,
                                        "valueType": "int",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 17,
                                        "valueName": "DirectoryName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\pages2",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 18,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\pages2\\NVC_JPEG_8Bit_Gray_Sequential Jpeg-0001.jpg",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 18,
                                        "valueName": "OutputImage",
                                        "value": "F_e81be699a67d4c4ebfb49408fc97c948DAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "jpg"
                                    },
                                    {
                                        "nodeId": 19,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\pages2\\PNG_8bit_2color_transparent.png",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 19,
                                        "valueName": "OutputImage",
                                        "value": "F_8fb7378bc6994095abdf7336a9dca3ddDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "png"
                                    },
                                    {
                                        "nodeId": 20,
                                        "valueName": "FileName",
                                        "value": "D:\\Temp\\BatchRoot\\Doc 1\\pages2\\TestUimBestBerryCompany.png",
                                        "valueType": "string",
                                        "offset": 0,
                                        "fileExtension": null
                                    },
                                    {
                                        "nodeId": 20,
                                        "valueName": "OutputImage",
                                        "value": "F_338acd1e28ab4f98bc7df0b94fa9d6edDAT",
                                        "valueType": "file",
                                        "offset": 0,
                                        "fileExtension": "png"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/batchItemContent"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 201,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S9d85aaf9fd134654be88edc11906fd53IS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/batches/B3K5_2SU3K4_1_pBiPrO",
                                    "title": "Batch_3K5_11",
                                    "updated": "2016-08-24T22:16:07.5331714Z",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/batches/B3K5_2SU3K4_1_pBiPrO"
                                        }
                                    },
                                    "content": {
                                        "id": "B3K5_2SU3K4_1_pBiPrO",
                                        "batchName": "Batch_3K5_11",
                                        "status": "S",
                                        "serverBatchId": "",
                                        "captureFlow": "",
                                        "batchRootLevel": 3,
                                        "batchPriority": 50,
                                        "lastUpdate": "2016-08-24T22:16:07.5331714Z",
                                        "lastError": "",
                                        "localExportFileId": "https://{host}/cp-rest/v2/session/files/Batch_3K5_11.zip"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services": {
            "get": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Retrieves a list of the Real-Time Services that are available.",
                "description": "This operation returns a feed listing all of the Real-Time Services.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "suppress_response_codes",
                        "description": "This can be left without an assignment or you can use itself, suppress_response_codes=suppress_response_codes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/baseHalJsonResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "$ref": "#/components/schemas/embeddedServiceLinks"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sb29a7dd631e94af5a5439148ea7a5bffHS"
                                    },
                                    "id": "https://{host}/cp-rest/v2/session/services",
                                    "title": "Services",
                                    "updated": "2017-01-11T00:03:48.8679075Z",
                                    "_links": {
                                        "self": {
                                            "href": "https://{host}/cp-rest/v2/session/services"
                                        }
                                    },
                                    "_embedded": {
                                        "collection": [
                                            {
                                                "id": "https://{host}/cp-rest/v2/session/services/processimage",
                                                "title": "Process Image Services",
                                                "updated": "2017-01-11T00:03:48.8679075Z",
                                                "_links": {
                                                    "self": {
                                                        "href": "https://{host}/cp-rest/v2/session/services/processimage"
                                                    }
                                                },
                                                "content": {
                                                    "name": "ProcessImage",
                                                    "version": "1.0.0.0"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/convertimages": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Convert Images Service.",
                "description": "The Convert Images Real-Time Service provides image conversion capability as defined by an image conversion profile.\n\nCapture Services currently only supports using system provided image conversion profiles named:\n\n- SplitPDFProfile,\n- SplitPDFtoPDFs, and\n- CombineSearchablePDFs”. \"SplitPDFProfile\" profile supports splitting PDF documents including colored documents resulting into tiff images of 300 DPI resolution. \"SplitPDFtoPDFs\" profile supports splitting multipage PDF document into single page PDF documents. “CombineSearchablePDFs” profile supports merging multipage PDF documents into a single mutltipage PDF document.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value must be \"S\" since \"SplitPDFProfile\" is system provided profile.\n\n- **Profile** - Required String. The Image conversion profile name to use for the conversion. Currently only system provided profiles name are “SplitPDFProfile”, “SplitPDFtoPDFs” and “CombineSearchablePDFs”.\n\n- **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If omitted or false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. File ID referncing the resulting file is returned as part of URI in \"src\" property of File object of Result Item.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\nNo values are necessary or used.\n\n**Files Per Request Item**\n\nEach item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource.\n\nThis service supports JPEG, PNG, TIFF, and PDF files. The File Type property for the file must specify the file extension for the file, such as \"tif\", \"png\", \"jpg\", \"pdf\". This is used by the Convert Images Real-Time Service for further typing of the file.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "S"
                                    },
                                    {
                                        "name": "Profile",
                                        "value": "SplitPDFProfile"
                                    },
                                    {
                                        "name": "ReturnFileDataInline",
                                        "value": false
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "9PageSequencedPdf-G4",
                                                "value": "F_d327d432cdaf4ed5895cf72ee7b229bbPDF",
                                                "contentType": "application/pdf",
                                                "fileType": "pdf"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted.\n\n**Values Per Result Item**\n\nNo values are returned in the result item objects.\n\n**Files Per Result Item**\n\nThere will be one or more files returned based on what was submitted.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S82d58e52200c4b85a2756dc5816ec639IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqIMGCONV_378_0021007",
                                    "serviceName": "convertimages",
                                    "executionMilliSeconds": 7731,
                                    "licensePagesUsed": 0,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [],
                                            "files": [
                                                {
                                                    "name": "9PageSequencedPdf-G4",
                                                    "value": "F_7dd9c7d28f134ddb82036b7bc444513fTIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_7dd9c7d28f134ddb82036b7bc444513fTIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G41",
                                                    "value": "F_1d4d4a313a1546fb9235831431924008TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_1d4d4a313a1546fb9235831431924008TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G42",
                                                    "value": "F_183640cd3e664c75a4fcaff3a357e725TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_183640cd3e664c75a4fcaff3a357e725TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G43",
                                                    "value": "F_e8bdfa99296244bfab13f8a504ac915bTIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_e8bdfa99296244bfab13f8a504ac915bTIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G44",
                                                    "value": "F_684447f71bfd4f43adcaa6aeec1dd793TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_684447f71bfd4f43adcaa6aeec1dd793TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G45",
                                                    "value": "F_e2f6290908c2427a84a2d9fa0b43c539TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_e2f6290908c2427a84a2d9fa0b43c539TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G46",
                                                    "value": "F_74660038bd374328b87c62b59f5fc041TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_74660038bd374328b87c62b59f5fc041TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G47",
                                                    "value": "F_c0cf5674ac4648bc99073e7c9cb80219TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_c0cf5674ac4648bc99073e7c9cb80219TIF",
                                                    "fileType": "tif"
                                                },
                                                {
                                                    "name": "9PageSequencedPdf-G48",
                                                    "value": "F_1d2049ff41024cbea2e8499fc323a19aTIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_1d2049ff41024cbea2e8499fc323a19aTIF",
                                                    "fileType": "tif"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/processimage": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Process Image Service.",
                "description": "The Process Image Real-Time Service provides image processing capability as defined by an image processor profile defined in the Designer.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **Profile** - Required String. The Image processor profile name to use.\n\n- **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If omitted or false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. File ID referncing the resulting file is returned as part of URI in \"src\" property of File object of Result Item.\n\n- **Redact** - Boolean. Image will be redacted using “Rectangles” property passed in Request Item. Redaction will be done before profile filter processing if profile name is passed in. “Profile” property is optional when “Redact” property is “True”.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **Rectangles** - **Optional** Object. Array of rectangles marking areas on image to be redacted. This parameter is used only when service property “Redact” is set to true.\nRectangle identified by values in the order of Left, Top, Width, and Height. All values are Pixels with a resolution of 96 dpi in both X and Y direction.\n{\n  \"left\":<integer>,\n  \"top\":<integer>,\n  \"width\":<integer>,\n  \"height\":<integer>\n}\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "Profile",
                                        "value": "DistractionRemoval"
                                    },
                                    {
                                        "name": "ReturnFileDataInline",
                                        "value": false
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_e644f6eff3ba445aaa3d8f47697764edTIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted.\n\n**Values Per Result Item**\n\nThe values returned depend on the filters defined in the Image processor profile in the Designer. Each filter may return one or more values. Please see the Image Processor Guide help documentation for learning what return IA Values are specified for a particular filter.\n\n**Files Per Result Item**\n\nThere will be one or more files returned based on what was submitted.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S9d85aaf9fd134654be88edc11906fd53IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPIMGPRO_3K3_0021009",
                                    "serviceName": "processimage",
                                    "executionMilliSeconds": 2185,
                                    "licensePagesUsed": 0,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "BlackBarLeft",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarTop",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarRight",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarBottom",
                                                    "value": 0
                                                }
                                            ],
                                            "files": [
                                                {
                                                    "name": "Wren",
                                                    "value": "F_901c0855f89242b3bb363c8f3d2946b8TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_901c0855f89242b3bb363c8f3d2946b8TIF",
                                                    "fileType": "tif"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/fullpageocr": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Full Page OCR Service.",
                "description": "The Full Page OCR Real-Time Service will provide full page OCR processing on submitted images or PDF documents and return the OCR content in the specified output type.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **OcrEngineName** - String. This specifies the OCR engine name to use. Currently supported engine is “Advanced”. \"Advanced” OCR engine is currently assigned to the “OpenText Capture Recognition Engine” for this release. The default OCR engine is “Advanced”.\n\n- **AutoRotate** - Boolean. This is an optional value specifying whether auto rotation should be enabled for the engine. The default is true.\n\n- **Country** - String. This optional value specifies the country for the engine. The default is \"USA\". When passing mutiple values in comma separated list, values must be within countries/languages groups given below:\n  - **Greek**: Greece, Greek\n  - **Latin and Cyrillic languages**: Afrikaans, Albanian, Andorra, Argentina, Australia, Austria, AzerbaijaniCyrillic, AzerbaijaniLatin, AzerbaijanCyrillic, AzerbaijanLatin, Baltic, Basque, Belarus, Belarusian, Belgium, BosnianLatin, BosniaLatin, Brazil, Bulgaria, Bulgarian, Canada, Catalan, CentralAmerica, CentralEurope, Chile, Colombia, Croatia, Croatian, Cyrillic, Czech, CzechLanguage, Danish, Denmark, Dutch, English, Estonia, Estonian, Faroese, Finland, Finnish, France, French, Frisian, German, Germany, GreatBritain, Greece, Greek, Guarani, Hani, Hungarian, Hungary, Iceland, Icelandic, Indonesian, Ireland, Irish, Italian, Italy, JapanLatin, KazakhCyrillic, KazakhLatin, KirghizCyrillic, Kirundi, Latin, Latvia, Latvian, Liechtenstein, Lithuania, Lithuanian, Luxembourg, Luxembourgish, Macedonian, Malay, Mexico, Netherlands, NewZealand, Norway, Norwegian, Poland, Polish, Portugal, Portuguese, Quechua, RhaetoRomanic, Romania, Romanian, Russia, Russian, Rwanda, Scandinavia, SerbianCyrillic, SerbianLatin, SerbiaCyrillic, SerbiaLatin, Shona, Slovak, Slovakia, Slovenia, Slovenian, Somali, Sorbian, SouthAfrica, SouthAmerica, SouthAmericaSpanish, Spain, Spanish, Swahili, Sweden, Swedish, Switzerland, TajikCyrillic, Turkey, Turkish, TurkmenCyrillic, TurkmenLatin, Ukraine, Ukrainian, USA, UzbekCyrillic, UzbekLatin, Venezuela, WesternEurope, Wolof, Xhosa, Zulu\n  - **Chinese**: ChineseSimplified, ChineseTraditional\n  - **Chinese Hong Kong**: ChineseTraditionalHongKong\n  - **Japanese**: Japan, Japanese (cannot both be selected.)\n  - **Korean**: Korean\n  - **Thai**: Thai, Thailand (English can be added explicitly)\n- **ProcessingMode** - String. This optional value specifies proessing mode value for the engine. The default is \"VoteOcrAndEText\". This can be one of the following values:\n  - **VoteOcrAndEText** - Select this option if your input documents contain mixed content. The data from file is extracted by running the full page OCR reading. Where possible, electronic text is also extracted and the results are used to refine the OCR results.\n  - **OcrFromImage** - Select this option if your input documents are images / contain images only. The data from file is extracted by running the full page OCR reading\n  - **ExtractFromEText** - Select this option if your input files are PDF files that contain textual data only. Electronic text is extracted natively, as is\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **OutputType** - **Required** String. This setting specifies the OCR output type for the request item. It can be one of these values \"Pdf\", \"Text\". The additional values you can make on the request item are based on what is assigned to the OutputType.\n\n  - **Values for OutputType \"Pdf\"**\n\n    - **Version** - String. Can be one of these optional values \"Pdf\", \"Pdf14\", \"Pdf15\", \"Pdf16\", \"Pdf17\", \"PdfA1A\", \"PdfA1B\", \"PdfA2A\", \"PdfA2B\", \"PdfA2U\". If not provided, the default value is \"Pdf\". Mapping to Acrobat version:\"Pdf\" -> PDF 1.7, \"Pdf14\" -> PDF 1.4, \"Pdf15\" -> PDF 1.5, \"Pdf16\" -> PDF 1.6, \"Pdf17\" -> PDF 1.7, \"PdfA1A\" -> PDF/A-1a, \"PdfA1B\" -> PDF/A-1b, \"PdfA2A\" -> PDF/A-2a and \"PdfA2B\" - > PDF/A-2b, \"PdfA2U\" -> PDF/A-2u\n    - **Compression** - String. Sets the compression level to apply to the text in the output PDF file.\n    Can be one of these optional values “None”, “Low, “Medium”, “High”. If not provided, the default value is “Medium”.\n\n    - **ImageSelection** - String. Can be one of these optional values. If not provided, the default value is “OriginalImage”.\n      - **NoImage** - Only extracted text will be included into the output file.\n      - **OriginalImage** - Extracted text will be included and the source image will be set as a background for the page in the output file.\n      - **ResultImage** - Extracted text will be included and the processed image will be set as a background for the page in the output file.\n    - **ImageResolutionLimit** - Number. Limits resolution of images (color, grey, binary) to provided value in DPI. If image resolution is lower than specified by this parameter, then image remains unchanged, otherwise it is scaled to this specified value.\n    Valid values are from 0 to 300. Default value is 150. When value is out of range (value outside 0 to 300), default is used.\n    - **JpegCompressionLevel** - Number. Controls the compression rate of the JPEG. Higher compression rates produce smaller files with lower image quality. The current version supports compression rates from 10, 15, 20, 25 an so on in increments of 5 until 90. Values other than 10, 15, 20, 25 etc in the range 10 to 90 are rounded to nearest valid value. E.g. 13 is rounded to 15.\n    The default value is 80. Default value is used when this parameter value is out of 10 to 90 range.\n    - **BinaryImage** - Boolean. Specifies whether to convert pdf file images to the binary format. When value is ‘true’ then pdf images are converted to the binary format. The default value is ‘false’.\n\n  - **Values for OutputType \"Text\"**\n\n    - None for output type “Text”. Encoding is “Unicode”.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, TIFF, and PDF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The supported file input types for color and grayscale images are JPEG and PNG. The supported file input type for binary images is TIFF G4.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "OcrEngineName",
                                        "value": "Advanced"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": [
                                            {
                                                "name": "OutputType",
                                                "value": "text"
                                            }
                                        ],
                                        "files": [
                                            {
                                                "name": "DoodadPage1",
                                                "value": "F_5fca44b57c4b4cddae84a7be36864c4bTIF",
                                                "contentType": "image/tiff"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted.\n\n**Values Per Result Item**\n\nNo values are returned in the result item objects.\n\n**Files Per Result Item**\n\nThere will be one file returned per request item based on the OutputType specified in the request item.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S7699312da37548f4a2bf9921c4a66d90"
                                    },
                                    "id": "REQ1",
                                    "serviceName": "FullPageOCR",
                                    "executionMilliSeconds": 847,
                                    "licenseUsedPercent": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "files": [
                                                {
                                                    "name": "Doodad-p1",
                                                    "value": "F_de487b9914be497681d09a927b060c27DAT",
                                                    "contentType": "text/plain",
                                                    "src": "https://{host}/cp-rest/session/files/F_de487b9914be497681d09a927b060c27DAT",
                                                    "fileType": "txt"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/readbarcodes": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Read BarCodes Service",
                "description": "The Read BarCodes Real-Time Service will provide barcode extraction processing.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **BarcodeTypes** - Required String. Comma separated list of available barcodes. List of barcodes types:\n  - Addon2, Addon5, AustralianPost, BCDMATRIX, Codabar, Code25_Datalogic, Code25_IATA, Code25_Industrial, Code25_Interleaved, Code25_Invert, Code25_Matrix, Code32, Code39, Code93, DataMatrix, EAN13, EAN8,IntelligentMail, PDF417, Postnet, QRCode, RoyalPost, Type128, UCC128, UPC_A, UPC_E\n\n- **Characters** - Number. Exact number of characters to search for in the barcode text. Valid values range from 0 to 100.\n\n- **Decode** - Boolean. If true, then it decodes the results into readable strings; otherwise, if false (the default), then it will not decode into readable strings.\n\n- **MinHeight** - Number. Minimum height of barcode. Valid values range from 0 (default) to 1000.\n\n- **Mode** - String. Barcode detection modes let you switch between normal and enhanced detection types. If omitted, defaults to **Normal**. Valid values:\n  - **Enhanced** - Provides better results by performing additional image preprocessing, but takes longer to complete,\n  - **Normal** - Enables quick barcodes detection.\n\n- **Orientation** - String. Specifies the orientation of the barcodes detection. If omitted, then it **defaults** to **HorizontalVertical**. Valid values are:\n  - Horizontal,\n  - HorizontalVertical,\n  - HorizontalVerticalDiagonal,\n  - Vertical.\n\n- **ScanDistance** - Number. Specifies the scan distance (in pixels) between line sweeps. Useful when searching for 1D type barcodes. Reducing the value improves detection of barcodes which are short relative to their height. Valid values are 1 to 10. If omitted, **defaults to 5**.\n\n- **UseChecksum** - Boolean. A value that is an indication of whether the checksums are used. If omitted, then it **defaults to false**.\n\n- **UseRegion** - String. A region to select for barcode detection in order to improve the barcode detection process. It **defaults to empty (not used)**.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\nNo values are necessary or used.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "Mode",
                                        "value": "Normal"
                                    },
                                    {
                                        "name": "Orientation",
                                        "value": "Horizontal"
                                    },
                                    {
                                        "name": "Decode",
                                        "value": true
                                    },
                                    {
                                        "name": "Characters",
                                        "value": "8"
                                    },
                                    {
                                        "name": "MinHeight",
                                        "value": "0"
                                    },
                                    {
                                        "name": "ScanDistance",
                                        "value": "5"
                                    },
                                    {
                                        "name": "BarcodeTypes",
                                        "value": ""
                                    },
                                    {
                                        "name": "UseChecksum",
                                        "value": false
                                    },
                                    {
                                        "name": "UseRegion",
                                        "value": ""
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Barcodes",
                                                "value": "F_9b0772629acd46369a18571d630bfb29DAT",
                                                "contentType": "application/octet-stream",
                                                "fileType": "TIF"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted.\n\n- **Values Per Result Item**\n\n  Each result item object may have zero or more properties depending on the success of the Read BarCodes Real-Time Service to provide barcode information. The following possible values for each result item object may be returned:\n\n  - **Barcode{0}_Conf** - Number. The barcode value’s confidence as a percentage number. Valid confidence values are 0 to 100. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.)\n\n  - **Barcode{0}_Height** - Number. The barcode's height in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcode{0}_Text** - Number. The barcode's text value. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcode{0}_Type** - String. The barcode's type name. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcode{0}_Width** - Number. The barcode's width in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcode{0}_X** - Number. The barcode’s X coordinate in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcode{0}_Y** - The barcode’s Y coordinate in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.\n\n  - **Barcodes_Count** - Number. The number of barcodes detected.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S9d85aaf9fd134654be88edc11906fd53IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPIMGPRO_3K3_0021033",
                                    "serviceName": "readbarcodes",
                                    "executionMilliSeconds": 229,
                                    "licensePagesUsed": 0,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "Barcode0_Type",
                                                    "value": "Codabar"
                                                },
                                                {
                                                    "name": "Barcode0_Text",
                                                    "value": "12345678"
                                                },
                                                {
                                                    "name": "Barcode0_X",
                                                    "value": 880
                                                },
                                                {
                                                    "name": "Barcode0_Y",
                                                    "value": 340
                                                },
                                                {
                                                    "name": "Barcode0_Width",
                                                    "value": 358
                                                },
                                                {
                                                    "name": "Barcode0_Height",
                                                    "value": 134
                                                },
                                                {
                                                    "name": "Barcode0_Orientation",
                                                    "value": "0"
                                                },
                                                {
                                                    "name": "Barcode0_Conf",
                                                    "value": 100
                                                },
                                                {
                                                    "name": "Barcode1_Type",
                                                    "value": "Code39"
                                                },
                                                {
                                                    "name": "Barcode1_Text",
                                                    "value": "39393939"
                                                },
                                                {
                                                    "name": "Barcode1_X",
                                                    "value": 877
                                                },
                                                {
                                                    "name": "Barcode1_Y",
                                                    "value": 1499
                                                },
                                                {
                                                    "name": "Barcode1_Width",
                                                    "value": 462
                                                },
                                                {
                                                    "name": "Barcode1_Height",
                                                    "value": 120
                                                },
                                                {
                                                    "name": "Barcode1_Orientation",
                                                    "value": "0"
                                                },
                                                {
                                                    "name": "Barcode1_Conf",
                                                    "value": 95
                                                },
                                                {
                                                    "name": "Barcodes_Count",
                                                    "value": 3
                                                }
                                            ],
                                            "files": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/classify": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Classify Service.",
                "description": "The Classify Service will perform Classification on the images submitted and return available Document Type and Template information if successful. In addition to template information, fields extracted as part of pre-index extraction will be retuned as fields in UimData.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the project's classification locale.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_30fd48db3ba14157ade16ba6b7f8c8a9TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **DocumentTypeName** - String. This is the Document Type name. e.g. \"Form1040EZ\". Empty if no match was found.\n\n  - **TemplateId** - String. This is the image template ID provided by the Classify Real-Time Service. This will be \"-1\" if no match was found.\n\n  - **DocBoundary** - Number. Indicates whether this page defines a document boundary. Valid values are the following integers - 0 means no document boundary and indicates a page other than first and last page. 1 means this is the first page of the document. 2 means this is the last page of the document.\n\n  - **PaperOrientation** - Number. Indicates where image is rotated by classify service. Valid values are as followings - 0 means no rotation. 1 means 90 degrees rotation. 2 means 180 degrees rotation. 3 means 270 degrees rotation.\n\n  - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the \"InformationExtraction\" project.\n\n  - **UimData** - Object. This is a UIM data information object. Returned if pre-index field extraction was performed.\n\n- **Files Per Result Item**\n\n  Image only if input image was rotated in classification. File data is returned inline if “ReturnFileDataInline” request parameter is true, else file is returned by file reference id.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sbf77b6cf64a140c5ad4db11b8cdba56aIS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPEXTRAC_33B_0041250",
                                    "serviceName": "classify",
                                    "executionMilliSeconds": 128,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "DocumentTypeName",
                                                    "value": "TestWren"
                                                },
                                                {
                                                    "name": "TemplateId",
                                                    "value": "28"
                                                },
                                                {
                                                    "name": "DocBoundary",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "PaperOrientation",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "ClassificationId",
                                                    "value": "d907a548196c4e35837dad51954cd3ed"
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                        "packageName": null,
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "string",
                                                                "labelText": "InvoiceNumber",
                                                                "isRequired": false,
                                                                "controlType": "TextBlock",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": "227628",
                                                                        "fieldError": null,
                                                                        "mustConfirm": false,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "flaggedReason": "",
                                                                        "extractedCharacters": null
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "name": "ShipVia",
                                                                "isArray": false,
                                                                "indexFieldType": "string",
                                                                "labelText": "ShipVia",
                                                                "isRequired": false,
                                                                "controlType": "TextBlock",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": "FOB SHANGHAI",
                                                                        "fieldError": null,
                                                                        "mustConfirm": false,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 24,
                                                                            "top": 379,
                                                                            "width": 125,
                                                                            "height": 17
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 97,
                                                                        "flaggedReason": "",
                                                                        "extractedCharacters": null
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "files": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/classifyextractpage": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Classify Extract Page Service.",
                "description": "The Classify Extract Page Service will perform classification and extraction on each item submitted and return a UIM object containing information from the result of classification and extraction.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise by default, it won't.\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the project's classification locale.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "IncludeOcrData",
                                        "value": false
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_28741fcd8ea9468fa23bee502f4b19ebTIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **DocumentTypeName** - String. This is the Document Type name. e.g. \"Form1040EZ\". Empty if no match was found.\n\n  - **TemplateId** - String. This is the image template ID provided by the Classify Real-Time Service. This will be \"-1\" if no match was found.\n\n  - **DocBoundary** - Number. Indicates whether this page defines a document boundary. Valid values are the following integers - 0 - means no document boundary and indicates a page other than first and last page. 1 - means this is the first page of the document. 2 - means this is the last page of the document.\n\n  - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the \"InformationExtraction\" project.\n\n  - **UimData** - Object. This is a UIM data information object, which contains the result of the classification and extraction operations.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sa3586a2353bb48c0b7131c9875f61e69IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "REQ5",
                                    "serviceName": "classifyextractpage",
                                    "executionMilliSeconds": 656,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 1,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "TemplateId",
                                                    "value": "28"
                                                },
                                                {
                                                    "name": "DocumentTypeName",
                                                    "value": "TestWren"
                                                },
                                                {
                                                    "name": "DocBoundary",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "ClassificationId",
                                                    "value": "d907a548196c4e35837dad51954cd3ed"
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "TestWren",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": null,
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "Number",
                                                                "labelText": "Invoice No.",
                                                                "isRequired": true,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": 227628,
                                                                        "fieldError": {
                                                                            "errorCode": "ER2208",
                                                                            "recoverable": false,
                                                                            "message": "Out of Bounds:Valid values: 1000 ➜ 10210"
                                                                        },
                                                                        "mustConfirm": true,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "extractedCharacters": null
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/classifyextractdocument": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Classify Extract Document Service.",
                "description": "The Classify Extract Document Service will perform classification and extraction on each item submitted and return an UIM object containing information from the result of classification and extraction. Optionally, the service will perform document separation as configured in the recognition project.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.\n\n- **EnableDocumentSeparation** - Optional string. Whether to perform auto document separation as per Dpp project folder management settings. Default value is “false”.\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the project's classification locale.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.\n\nIf the request item contains more than one image, then the document type associated with the first classified page is used for the document. The extraction results for all pages belonging to the document type are merged into a single document. If a given field has conflicting values from different pages, then the value is set according to the \"Extract Page\" visual property for that field in the document type definition.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "IncludeOcrData",
                                        "value": true
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_28741fcd8ea9468fa23bee502f4b19ebTIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            },
                                            {
                                                "name": "Wren_p2",
                                                "value": "F_2061b933c8e5412aa563a1b9c7ebf337TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **UimData** - Object. This is a UIM data information object, which contains the result of the classification and extraction operations. This value is present if document separation is not enabled (i.e. “EnableDocumentSeparation” service property is “false”).)\n\n  - **UimDataArray** - Array of UimData objects. This value is present if document separation is enabled (i.e. “EnableDocumentSeparation” service property is “true”). Array contains a UimData object for each auto separated document in the order of separated documents. If document separation generated one only one document, then array contains only one UimData for that document.)\n\n  - **DocumentFieldArray** - Array of strings. Array of comma separated list of document file Id references strings. This value is present if document separation is enabled (i.e. “EnableDocumentSeparation” service property is “true”). Array contains a string for each auto separated document in the order of separated documents. If document separation generated one only one document, then array contain only one string of comma separated list of document file Id references for that document only.)\n\n  - **ClassificationPageIds** - Array of strings. An array of server-generated IDs, one per page, that is used when learning to classify documents with the \"InformationExtraction\" project.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S117316e70dcd4942884f142d79d41295IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPEXTRAC_3K3_0031108",
                                    "serviceName": "classifyextractdocument",
                                    "executionMilliSeconds": 660,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 1,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "ClassificationPageIds,",
                                                    "value": [
                                                        "d907a548196c4e35837dad51954cd3ed",
                                                        "748f4bfce54f4fc084ba19cee31bcccc"
                                                    ]
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "TestWren",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "Number",
                                                                "labelText": "Invoice No.",
                                                                "isRequired": true,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": 227628,
                                                                        "fieldError": {
                                                                            "errorCode": "ER2208",
                                                                            "recoverable": false,
                                                                            "message": "Out of Bounds:Valid values: 1000 ➜ 10210"
                                                                        },
                                                                        "mustConfirm": true,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "extractedCharacters": [
                                                                            {
                                                                                "values": [
                                                                                    {
                                                                                        "value": "2",
                                                                                        "confidence": 100
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/extractpage": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Extract Page Service.",
                "description": "The Extract Page Service will perform extraction on each item submitted and return a UIM object containing information from the result.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n**Values Per Request Item**\n\n- **DocumentTypeName** - String. The Document Type name to be used for extraction. This is optional if the TemplateId property is passed. This value is case sensitive when the request uses the \"InformationExtraction\" project.\n\n- **PageIndex** - Number. The zero-based page index within Document Type. If omitted, then it defaults to 0. This is optional if the TemplateId property is passed. Unused if the project is \"InformationExtraction\".\n\n- **TemplateId** - String. The image template ID assigned in the recognition project that should be used for extraction. If not supplied, then the DocumentTypeName should be specified. Unused if the project is \"InformationExtraction\".\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the extraction profile's locale.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.\n\nIf the DocumentTypeName and PageIndex are specified, then the data will be extracted based on the index of the template in the order of the template names (not IDs) in the specified document type. If the PageIndex is greater than the number of templates in the document type, then the image is not processed for data extraction.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "IncludeOcrData",
                                        "value": false
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": [
                                            {
                                                "name": "DocumentTypeName",
                                                "value": "TestWren"
                                            },
                                            {
                                                "name": "TemplateId",
                                                "value": ""
                                            },
                                            {
                                                "name": "PageIndex",
                                                "value": "0"
                                            }
                                        ],
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_0d7bbf6b26b74960b36aa26523ed4d10TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **UimData** - Object. This is a UIM data information object, which contains the result of the extraction operation.\n\n  - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the \"InformationExtraction\" project.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S6ac611ec08f243cdb3c9977004953b1fIS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPEXTRAC_3K3_0031049",
                                    "serviceName": "extractpage",
                                    "executionMilliSeconds": 600,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "ClassificationId",
                                                    "value": "d907a548196c4e35837dad51954cd3ed"
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "TestWren",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": null,
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "Number",
                                                                "labelText": "Invoice No.",
                                                                "isRequired": true,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": 227628,
                                                                        "fieldError": {
                                                                            "errorCode": "ER2208",
                                                                            "recoverable": false,
                                                                            "message": "Out of Bounds:Valid values: 1000 ➜ 10210"
                                                                        },
                                                                        "mustConfirm": true,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "extractedCharacters": null
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/extractdocument": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Extract Document Service.",
                "description": "The Extract Document Service will perform extraction on each item submitted and return a UIM object containing information from the result.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n**Values Per Request Item**\n\n- **DocumentTypeName** String. The Document Type name to be used for extraction. This is ignored if the TemplateIds property is passed. This value is case sensitive when the request uses the \"InformationExtraction\" project.\n\n- **TemplateIds** - Array of Strings. The image template IDs assigned in the recognition project that are used for extraction. If not supplied, then the DocumentTypeName must be specified. Unused if the project is \"InformationExtraction\". To skip a extraction from a page, set the template ID for that page to \"-2\".\n\n- **RepeatLastTemplate** - Boolean. If true and if the TemplateIds array has fewer entries than the request item has files, the last template ID is applied to the remaining files in the request item.\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the extraction profile's locale.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.\n\nIf the TemplateIds property is not included in the request, more than one image is sent, and the DocumentTypeName is specified, then the images are processed as follows. First, the templates in the specified document type are ordered by name (not ID). Then, the first template in the list is used for the first file in the request item, the second template in the list is used for the second file in the request item, and so forth. If the request item contains more images than there are templates in the document type, then the extra images are not processed for data extraction.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "IncludeOcrData",
                                        "value": true
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": [
                                            {
                                                "name": "DocumentTypeName",
                                                "value": "TestWren"
                                            },
                                            {
                                                "name": "TemplateIds",
                                                "value": [
                                                    "28"
                                                ]
                                            },
                                            {
                                                "name": "RepeatLastTemplate",
                                                "value": false
                                            }
                                        ],
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_113aecccef734e448bec8d254ae4e059TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            },
                                            {
                                                "name": "Wren_p2",
                                                "value": "F_2061b933c8e5412aa563a1b9c7ebf337TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **UimData** - Object. This is a UIM data information object, which contains the result of the extraction operation.\n\n  - **ClassificationPageIds** - Array of strings. An array of server-generated IDs, one per page, that is used when learning to classify documents with the \"InformationExtraction\" project.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sa3586a2353bb48c0b7131c9875f61e69IS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "REQ6",
                                    "serviceName": "extractdocument",
                                    "executionMilliSeconds": 663,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "ClassificationPageIds,",
                                                    "value": [
                                                        "d907a548196c4e35837dad51954cd3ed",
                                                        "748f4bfce54f4fc084ba19cee31bcccc"
                                                    ]
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "TestWren",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "Number",
                                                                "labelText": "Invoice No.",
                                                                "isRequired": true,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": 227628,
                                                                        "fieldError": {
                                                                            "errorCode": "ER2208",
                                                                            "recoverable": false,
                                                                            "message": "Out of Bounds:Valid values: 1000 ➜ 10210"
                                                                        },
                                                                        "mustConfirm": true,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "extractedCharacters": [
                                                                            {
                                                                                "values": [
                                                                                    {
                                                                                        "value": "2",
                                                                                        "confidence": 100
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/uimdata": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "UIMData Service.",
                "description": "The UimData Real-Time Service will provide either UIM (Unified Indexing Model) data population or validation or both population and validation. The population and validation rules referenced below are developed in the Designer when constructing a Document Type. Please see the Designer documentation for more information about rules and Document Types.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **Command** - String. Valid values:\n  - **Validate** - UimData is validated as per validation rules,\n  - **Populate** - UimData fields are populated using population rules, or\n  - **PopulateAndValidate** - UimData fields are populated using population rules and then the data is validated per data validation rules.\n\n- **TriggerReference** - String. Name of the field that is used as a population trigger or population target. Used only for Populate or PopulateAndValidate commands. If this is empty or not provided, then the service will run all the rules on the supplied UimData. If it is populated, then it will only run rules that are not one-time rules.\n\n- **TriggerKind** - String. One of the following values. Used only for Populate or PopulateAndValidate commands.\n  - **Calculate** - The first expression population rule where TriggerReference is used as the target field is run. This can also be an array field name with a valid row index specified in PopulateTriggerRow,\n  - **Lookup** - All population rules of type DatabaseLookup are run in the specified order, where the TriggerReference is one of the trigger fields. This can also be an array field name with a valid row index specified in PopulateTriggerRow, or\n  - **PopulateOptions** - The first DatebaseLookup rule is run where TriggerReference is one of the trigger fields and the Choice values are populated by the first two columns of the result set. This can also be an array field name with a valid row index specified in PopulateTriggerRow.\n\n- **PopulateTriggerRow** - Integer. This is a zero based row index for array field based population. This property is ignored if no field name was supplied in the \"triggerReference\" property or if the field name supplied is not an array field. The operation will also fail if the index supplied for this property is invalid for the supplied array field name.\n\n- **UimData** - Object. This is a UIM data information object that you want the service to use for performing the command.\n\n**Files Per Request Item**\n\nNo files are necessary or used.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": [
                                            {
                                                "name": "Command",
                                                "value": "Populate"
                                            },
                                            {
                                                "name": "TriggerReference",
                                                "value": "ID"
                                            },
                                            {
                                                "name": "TriggerKind",
                                                "value": "Lookup"
                                            },
                                            {
                                                "name": "UimData",
                                                "value": {
                                                    "docType": "Employee",
                                                    "locale": "en-US",
                                                    "flaggedReason": null,
                                                    "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                    "nodeList": [
                                                        {
                                                            "name": "ID",
                                                            "isArray": false,
                                                            "indexFieldType": "string",
                                                            "labelText": "ID",
                                                            "isRequired": false,
                                                            "controlType": "TextBox",
                                                            "data": [
                                                                {
                                                                    "arrayIndex": 0,
                                                                    "value": "1234",
                                                                    "fieldError": null,
                                                                    "mustConfirm": false,
                                                                    "choices": null
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "Name",
                                                            "isArray": false,
                                                            "indexFieldType": "string",
                                                            "labelText": "Name",
                                                            "isRequired": false,
                                                            "controlType": "TextBox",
                                                            "data": [
                                                                {
                                                                    "arrayIndex": 0,
                                                                    "value": "",
                                                                    "fieldError": null,
                                                                    "mustConfirm": false,
                                                                    "choices": null,
                                                                    "locationRect": null,
                                                                    "pageId": 0,
                                                                    "confidence": 100
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  - **UimData** - Object. This is a UIM data information object, which contains the result of the service operation.\n\n- **Files Per Result Item**\n\n  No files are returned by thie Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S7699312da37548f4a2bf9921c4a66d90"
                                    },
                                    "id": "REQ1",
                                    "serviceName": "UimData",
                                    "executionMilliSeconds": 847,
                                    "licenseUsedPercent": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "Employee",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                        "nodeList": [
                                                            {
                                                                "name": "ID",
                                                                "isArray": false,
                                                                "indexFieldType": "string",
                                                                "labelText": "ID",
                                                                "isRequired": false,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": "1234",
                                                                        "fieldError": null,
                                                                        "mustConfirm": false,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 0,
                                                                            "top": 0,
                                                                            "width": 0,
                                                                            "height": 0
                                                                        },
                                                                        "pageId": 0,
                                                                        "confidence": 100
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "name": "Name",
                                                                "isArray": false,
                                                                "indexFieldType": "string",
                                                                "labelText": "Name",
                                                                "isRequired": false,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": "John Doe",
                                                                        "fieldError": null,
                                                                        "mustConfirm": false,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 0,
                                                                            "top": 0,
                                                                            "width": 0,
                                                                            "height": 0
                                                                        },
                                                                        "pageId": 0,
                                                                        "confidence": 100
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/processimagepipeline": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Process Image Pipeline Service.",
                "description": "The Process Image Pipeline Real-Time services executes a series of image services on a single image based on service properties. The order of services execution is as follows::\n  - Image Enhancement\n  - Classify\n  - Extract\n\nOutputs of all executed services are combined and returned in the response.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **ImageProfile** - If non empty, the incoming image is enhanced.\n\n- **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. Default value is true. Applicable only if image enhancement is done. File ID referncing the resulting file is returned as part of URI in \"src\" property of File object of Result Item.\n\n- **Classify** - Boolean. Classify the image.\n\n- **Extract** - Boolean. Extract the image. If this is set then ClassifyAndExtract is performed on the image and “Classify” flag is ignored.\n\n- **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.\n\n- **Project** - Optional string. The recognition project to use to classify the document. Valid values are \"Default\" for the Advanced Recognition and \"InformationExtraction\" for the Information Extraction. If omitted, \"Default\" is used.\n\n- **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the \"InformationExtraction\" project. If omitted, text is read using the project's classification locale.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\nNo values are necessary or used.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. There can only be one file in request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "ImageProfile",
                                        "value": "DistractionRemoval"
                                    },
                                    {
                                        "name": "Extract",
                                        "value": true
                                    },
                                    {
                                        "name": "ReturnFileDataInline",
                                        "value": false
                                    },
                                    {
                                        "name": "IncludeOcrData",
                                        "value": false
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": null,
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_ac92828e036e402687e020dbb8f3f4c0TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "**Values**\n\n- The values returned by all services executed. Please refer to Real-Time services for the values returned.\n\n**Files**\n\n- Enhanced image file if image was enhanced.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-S406d66e561d54f99b74f71aeca31fc46IS"
                                    },
                                    "id": "Req34W_3",
                                    "serviceName": "processimagepipeline",
                                    "executionMilliSeconds": 968,
                                    "licensePagesUsed": 0,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [
                                                {
                                                    "name": "BlackBarLeft",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarTop",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarRight",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "BlackBarBottom",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "TemplateId",
                                                    "value": "28"
                                                },
                                                {
                                                    "name": "DocumentTypeName",
                                                    "value": "TestWren"
                                                },
                                                {
                                                    "name": "DocBoundary",
                                                    "value": 0
                                                },
                                                {
                                                    "name": "ClassificationId",
                                                    "value": "d907a548196c4e35837dad51954cd3ed"
                                                },
                                                {
                                                    "name": "UimData",
                                                    "value": {
                                                        "docType": "TestWren",
                                                        "locale": "en-US",
                                                        "flaggedReason": null,
                                                        "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                        "packageName": "",
                                                        "nodeList": [
                                                            {
                                                                "name": "InvoiceNumber",
                                                                "isArray": false,
                                                                "indexFieldType": "Number",
                                                                "labelText": "Invoice No.",
                                                                "isRequired": true,
                                                                "controlType": "TextBox",
                                                                "data": [
                                                                    {
                                                                        "arrayIndex": 0,
                                                                        "value": null,
                                                                        "fieldError": null,
                                                                        "mustConfirm": true,
                                                                        "choices": null,
                                                                        "locationRect": {
                                                                            "left": 639,
                                                                            "top": 144,
                                                                            "width": 124,
                                                                            "height": 30
                                                                        },
                                                                        "pageId": 1,
                                                                        "confidence": 100,
                                                                        "extractedCharacters": null
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "files": [
                                                {
                                                    "name": "Wren",
                                                    "value": "F_3dce19d31ad948c7a48e92cad7ee0090TIF",
                                                    "contentType": "image/tiff",
                                                    "src": "https://{host}/cp-rest/v2/session/files/F_3dce19d31ad948c7a48e92cad7ee0090TIF",
                                                    "fileType": "tif"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/services/learning": {
            "post": {
                "tags": [
                    "Real-Time Services"
                ],
                "summary": "Learning Service",
                "description": "The Learning service is used to learn to classify and/or extract a document using the Information Extraction recognition project. The document must previously have been processed with one of the services that classify and/or extract the document in order to generate the needed server-side data for learning. Extraction IDs (extractionId) returned by the following services cannot be used for learning: Classify, ClassifyExtractPage, and ExtractPage. However, extraction IDs that are returned from the following services can be used: ClassifyExtractDocument, and ExtractDocument. In other words, only extraction IDs coming from document level classify or extract services are valid. Now, there are two situations where learning IDs will be invalid. First, if you change the structure of the batch such as rearranging pages, deleting pages, or adding new pages after you have called those APIs for classification and extraction, then you will need to clear the Extraction IDs (extractionId) in the UIMData as they will be invalid for learning. Second, if you modify a page such as rotating or cropping it, supply null for that page's classification ID instead of the ID returned by the classification APIs as the change to the image invalidates its classification.\n\nFor more efficient processing, if a document classified or extracted with the Information Extraction project will not be learned, the learning service should still be called with the learning mode set to \"None\". This will delete any temporary server-side data that would otherwise be used for learning.\n\n**Service Properties**\n\n- **Env** - Metadata environment identifier. Value is one of \"D\", \"T\" or \"P\". Default value is \"P\".\n\n- **Project** - String. Must be set to \"InformationExtraction\" for the Information Extraction project.\n\n**Number of Request Items**\n\nThis Real-Time Service supports one or more items.\n\n**Values Per Request Item**\n\n- **Mode** - String. Valid values:\n  - **Classify** - Learn to classify the supplied document.\n  - **Extract** - Learn to extract the supplied document.\n  - **ClassifyExtract** - Learn to both classify and extract the supplied document.\n  - **None** - Do not learn, but remove any temporary server-side data used for learning the supplied document.\n\n- **UimData** - Object. This is a UIM data information object to be used for learning to extract. Learning works best if the field values have location rectangles. The page IDs for the field values are 0-based page numbers in this call.\n\n- **DocumentType** String. The Document Type name to be used for learning to classify.\n\n- **ClassificationPageIds** - Array of strings. The array of server-generated IDs, one per page, returned by classification functions. The service will use these values to learn to classify. If the entire document was extracted, this is the \"ClassificationPageIds\" returned by the extraction call. If the document was extracted page-by-page, it is an array of the per-page classification IDs. The values in the list must have the same order as the pages in the document.\n\n**Files Per Request Item**\n\nThis service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.",
                "security": [
                    {
                        "oAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/hal+json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicesRequestBody"
                            },
                            "example": {
                                "serviceProps": [
                                    {
                                        "name": "Env",
                                        "value": "D"
                                    },
                                    {
                                        "name": "Project",
                                        "value": "InformationExtraction"
                                    }
                                ],
                                "requestItems": [
                                    {
                                        "nodeId": 1,
                                        "values": [
                                            {
                                                "name": "Mode",
                                                "value": "ClassifyExtract"
                                            },
                                            {
                                                "name": "DocumentType",
                                                "value": "TestWren"
                                            },
                                            {
                                                "name": "ClassificationPageIds",
                                                "value": [
                                                    "d907a548196c4e35837dad51954cd3ed",
                                                    "748f4bfce54f4fc084ba19cee31bcccc"
                                                ]
                                            },
                                            {
                                                "name": "UimData",
                                                "value": {
                                                    "docType": "TestWren",
                                                    "locale": "en-US",
                                                    "flaggedReason": null,
                                                    "extractionId": "3aff08999e844ff6a31aff002b0fcb4a",
                                                    "nodeList": [
                                                        {
                                                            "name": "InvoiceNumber",
                                                            "isArray": false,
                                                            "indexFieldType": "Number",
                                                            "labelText": "Invoice No.",
                                                            "isRequired": true,
                                                            "controlType": "TextBox",
                                                            "data": [
                                                                {
                                                                    "arrayIndex": 0,
                                                                    "value": 227628,
                                                                    "fieldError": {
                                                                        "errorCode": "ER2208",
                                                                        "recoverable": false,
                                                                        "message": "Out of Bounds:Valid values: 1000 ➜ 10210"
                                                                    },
                                                                    "mustConfirm": true,
                                                                    "choices": null,
                                                                    "locationRect": {
                                                                        "left": 639,
                                                                        "top": 144,
                                                                        "width": 124,
                                                                        "height": 30
                                                                    },
                                                                    "pageId": 0,
                                                                    "confidence": 100,
                                                                    "extractedCharacters": [
                                                                        {
                                                                            "values": [
                                                                                {
                                                                                    "value": "2",
                                                                                    "confidence": 100
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "files": [
                                            {
                                                "name": "Wren",
                                                "value": "F_30fd48db3ba14157ade16ba6b7f8c8a9TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            },
                                            {
                                                "name": "Wren_p2",
                                                "value": "F_2061b933c8e5412aa563a1b9c7ebf337TIF",
                                                "contentType": "image/tiff",
                                                "fileType": "tif"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.\n\n- **Values Per Result Item**\n\n  No values are returned in the result item objects.\n\n- **Files Per Result Item**\n\n  No files are returned by this Real-Time Service.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/commonServiceResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licensePercent"
                                        },
                                        {
                                            "$ref": "#/components/schemas/licenseUsed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/resultItemsBasicWithValuesAndFilesArray"
                                        }
                                    ]
                                },
                                "example": {
                                    "returnStatus": {
                                        "status": 200,
                                        "code": "OK0000",
                                        "message": "",
                                        "server": "WS-Sbf77b6cf64a140c5ad4db11b8cdba56aIS"
                                    },
                                    "licenseUsedPercent": 0,
                                    "id": "ReqCPEXTRAC_33B_0041250",
                                    "serviceName": "learning",
                                    "executionMilliSeconds": 128,
                                    "licensePagesUsed": 1,
                                    "licensePagesUsed2": 0,
                                    "resultItems": [
                                        {
                                            "nodeId": 1,
                                            "errorCode": "",
                                            "errorMessage": "",
                                            "values": [],
                                            "files": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/403Forbidden"
                    },
                    "415": {
                        "$ref": "#/components/responses/415NotSupported"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "returnStatusBody": {
                "type": "object",
                "description": "Returned only if user is authenticated.",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    }
                }
            },
            "linkHref": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "resourceLinks": {
                "type": "object",
                "description": "Link relations.",
                "properties": {
                    "self": {
                        "type": "object",
                        "description": "The href will match the URI used to retrieve this.",
                        "properties": {
                            "href": {
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                }
            },
            "baseHalJsonResponseForBatches": {
                "type": "object",
                "properties": {
                    "returnStatus": {
                        "$ref": "#/components/schemas/returnStatusBody"
                    },
                    "id": {
                        "type": "string",
                        "description": "Feed or Entry instance identifier."
                    },
                    "title": {
                        "type": "string",
                        "description": "Simple localized title for the feed."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/resourceLinks"
                    }
                }
            },
            "baseHalJsonResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseHalJsonResponseForBatches"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "updated": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Feed or Entry date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z)"
                            }
                        }
                    }
                ]
            },
            "baseEmbedded": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Item instance identifier.",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updated": {
                        "type": "string",
                        "description": "Entry date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z)",
                        "format": "date-time"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/resourceLinks"
                    }
                }
            },
            "env": {
                "type": "string",
                "enum": [
                    "D",
                    "T",
                    "P"
                ],
                "default": "P"
            },
            "embeddedServiceLinksContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "object",
                        "description": "JSON object representing the content for this entry.",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Not localized. Name of the Real-Time Service.",
                                "format": "uri"
                            },
                            "version": {
                                "type": "string",
                                "description": "The version number for the Real-Time Service."
                            }
                        }
                    }
                }
            },
            "embeddedServiceLinks": {
                "type": "object",
                "properties": {
                    "collection": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/baseEmbedded"
                                },
                                {
                                    "$ref": "#/components/schemas/embeddedServiceLinksContent"
                                }
                            ]
                        }
                    }
                }
            },
            "servicesRequestBody": {
                "type": "object",
                "properties": {
                    "serviceProps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "requestItems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "nodeId": {
                                    "type": "integer"
                                },
                                "values": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "boolean"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            },
                                            "contentType": {
                                                "type": "string"
                                            },
                                            "fileType": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "commonServiceResponse": {
                "type": "object",
                "properties": {
                    "returnStatus": {
                        "$ref": "#/components/schemas/returnStatusBody"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "executionMilliSeconds": {
                        "type": "string"
                    }
                }
            },
            "licensePercent": {
                "properties": {
                    "licenseUsedPercent": {
                        "type": "integer"
                    }
                }
            },
            "licenseUsed": {
                "properties": {
                    "licensePagesUsed": {
                        "type": "integer"
                    },
                    "licensePagesUsed2": {
                        "type": "integer"
                    }
                }
            },
            "basicResultItem": {
                "type": "object",
                "properties": {
                    "nodeId": {
                        "type": "integer"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "resultItemValues": {
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "basicResultItemWithValues": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/basicResultItem"
                    },
                    {
                        "$ref": "#/components/schemas/resultItemValues"
                    }
                ]
            },
            "resultItemFiles": {
                "properties": {
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "contentType": {
                                    "type": "string"
                                },
                                "src": {
                                    "type": "string"
                                },
                                "fileType": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "basicResultItemWithFiles": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/basicResultItem"
                    },
                    {
                        "$ref": "#/components/schemas/resultItemFiles"
                    }
                ]
            },
            "basicResultItemWithValuesAndFiles": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/basicResultItemWithValues"
                    },
                    {
                        "$ref": "#/components/schemas/resultItemFiles"
                    }
                ]
            },
            "resultItemsBasicWithValuesArray": {
                "properties": {
                    "resultItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/basicResultItemWithValues"
                        }
                    }
                }
            },
            "resultItemsBasicWithFilesArray": {
                "properties": {
                    "resultItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/basicResultItemWithFiles"
                        }
                    }
                }
            },
            "resultItemsBasicWithValuesAndFilesArray": {
                "properties": {
                    "resultItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/basicResultItemWithValuesAndFiles"
                        }
                    }
                }
            },
            "uimData": {
                "type": "object",
                "description": "The UIM data information object is returned by some Real-Time Services. This object contains information about the Document Type associated with a set of one or more images along with the data for the fields. This object is defined as follows.",
                "properties": {
                    "docType": {
                        "type": "string",
                        "description": "The name of the document type."
                    },
                    "locale": {
                        "type": "string",
                        "description": "The culture code"
                    },
                    "flaggedReason": {
                        "type": "string",
                        "description": "Specifies the reason for the validation error. This will only be filled on \"Populate\" and \"PopulateAndValidate\" commands if there is an error. Otherwise, it is null."
                    },
                    "extractionId": {
                        "type": "string",
                        "description": "A ID generated by the server during document (not page) extraction that is used when learning to extract documents with the \"InformationExtraction\" project."
                    },
                    "nodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the field"
                                },
                                "isArray": {
                                    "type": "boolean",
                                    "description": "True if this is an array field; otherwise, false."
                                },
                                "indexFieldType": {
                                    "type": "string",
                                    "enum": [
                                        "number",
                                        "string",
                                        "boolean",
                                        "datetime"
                                    ],
                                    "description": "Specifies the type of field. Will be one of \"number\", \"string\", \"boolean\", \"datetime\"."
                                },
                                "labelText": {
                                    "type": "string",
                                    "description": "The label for the field to show in the UI."
                                },
                                "isRequired": {
                                    "type": "boolean",
                                    "description": "True if this is a required field; otherwise, false."
                                },
                                "controlType": {
                                    "type": "string",
                                    "enum": [
                                        "TextBox",
                                        "ChoiceText",
                                        "ListBox",
                                        "CheckBox",
                                        "ComboBox"
                                    ],
                                    "description": "This will be the type of UI control. Will be one of \"TextBox\", \"ChoiceText\", \"ListBox\", \"CheckBox\", \"ComboBox\"."
                                },
                                "data": {
                                    "type": "array",
                                    "description": "Contains all the data for the field(s).",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "arrayIndex": {
                                                "type": "integer",
                                                "description": "If the field is an array field, this is the array index."
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "The value of the field."
                                            },
                                            "fieldError": {
                                                "type": "object",
                                                "description": "This contains the error information for the field",
                                                "properties": {
                                                    "errorCode": {
                                                        "type": "string",
                                                        "description": "The error code string assigned to the field."
                                                    },
                                                    "recoverable": {
                                                        "type": "boolean",
                                                        "description": "True if the error is recoverable; otherwise, false."
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The error message."
                                                    }
                                                }
                                            },
                                            "mustConfirm": {
                                                "type": "boolean",
                                                "description": "True if the user must confirm; otherwise, false."
                                            },
                                            "choices": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "The name of the choice."
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "The value of the choice."
                                                        }
                                                    }
                                                }
                                            },
                                            "locationRect": {
                                                "type": "object",
                                                "description": "Field location on image information.",
                                                "properties": {
                                                    "left": {
                                                        "type": "integer"
                                                    },
                                                    "top": {
                                                        "type": "integer"
                                                    },
                                                    "width": {
                                                        "type": "integer"
                                                    },
                                                    "height": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "pageId": {
                                                "type": "integer",
                                                "description": "The ID of the page on which this field value is found. In the learning call, the 0-based page number in the document."
                                            },
                                            "confidence": {
                                                "type": "integer",
                                                "description": "Extracted data accuracy confidence as a percent between 0 and 100."
                                            },
                                            "extractedCharacters": {
                                                "type": "array",
                                                "description": "This contains information about each extracted character.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "values": {
                                                            "type": "array",
                                                            "description": "The character hypotheses.",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "The character hypothesis value."
                                                                    },
                                                                    "confidence": {
                                                                        "type": "integer",
                                                                        "description": "The character hypothesis accuracy confidence as a percent between 0 and 100."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "tableItemContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "object",
                        "description": "JSON object representing the content for this entry.",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the table."
                            },
                            "tableName": {
                                "type": "string",
                                "description": "Localized display name of the table."
                            },
                            "fieldNames": {
                                "type": "array",
                                "description": "A comma-delimited list of names for each column.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "rows": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "description": "Array of objects JSON encoded (string, int, array, object, etc). Eg. [123,\"text\",[1,2,3],{\"name\":\"value\"}]",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "docItemContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "ID of the Document Type."
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the Document Type resource."
                            },
                            "locale": {
                                "type": "string",
                                "description": "The culture of the Document Type"
                            },
                            "description": {
                                "type": "string",
                                "description": "The description given for the Document Type."
                            },
                            "project": {
                                "type": "string",
                                "description": "The recognition project name associated with the Document Type.",
                                "default": "Default"
                            },
                            "env": {
                                "$ref": "#/components/schemas/env"
                            },
                            "fields": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the field"
                                        },
                                        "isArray": {
                                            "type": "boolean",
                                            "description": "Whether the field is an array field."
                                        },
                                        "indexFieldType": {
                                            "type": "string",
                                            "enum": [
                                                "Number",
                                                "String",
                                                "Boolean",
                                                "DateTime"
                                            ],
                                            "description": "Type of field (Number, String, Boolean, DateTime)"
                                        },
                                        "sectionName": {
                                            "type": "string",
                                            "description": "Form section name to which this field belongs. If field is an array type, then this is the table name."
                                        },
                                        "indexLevel": {
                                            "type": "integer",
                                            "description": "Used only in the context of hierarchical collection of documents. The level must be between 1 and 7. If the level is higher than 1, then it is assumed that any changes must propagate to all siblings in the context of ancestor at that higher level."
                                        },
                                        "confirmKind": {
                                            "type": "string",
                                            "enum": [
                                                "NeverConfirm",
                                                "AlwaysConfirm",
                                                "ConfirmOnEmpty"
                                            ],
                                            "description": "Confirmation kind. One of NeverConfirm, AlwaysConfirm, ConfirmOnEmpty."
                                        },
                                        "isReadOnly": {
                                            "type": "boolean",
                                            "description": "Is the field read only?"
                                        },
                                        "isRequried": {
                                            "type": "boolean",
                                            "description": "Is this a required field?"
                                        },
                                        "minValue": {
                                            "type": "string",
                                            "description": "Minimum value for the field. If null, no lower bound. In case of datetime, value is represented as double .NET OADate. In case of strings, min length."
                                        },
                                        "maxValue": {
                                            "type": "string",
                                            "description": "Maximum value for the field. If null, no upper bound. In case of datetime, value is represented as double .NET OADate. In case of strings, max length."
                                        },
                                        "restrictionMask": {
                                            "type": "string",
                                            "description": "The Restriction mask pattern for validating strings. Empty means no pattern check. This is a regex expression equivalent to restriction mask pattern."
                                        },
                                        "viewFormat": {
                                            "type": "string",
                                            "description": "Holds the format string for date and time fields. The format string utilizes Microsoft .NET Framework 4.5.2 custom date and time format specifiers. Standard format strings are not supported. Example \"dd-MM-yyyy hh:mm:ss tt\" should be rendered by the client as, \"27-10-2009 10:47:50 AM\"."
                                        },
                                        "checkDateFromNow": {
                                            "type": "boolean",
                                            "description": "If true and the datatype for the field is DateTime and range check is enabled through Min, Max values, the Min and Max values are interpreted as time span and are validated with reference to Now(). If false and the datatype is DateTime then Min and Max are interpreted as absolute date time values."
                                        },
                                        "uiControlInfo": {
                                            "type": "object",
                                            "description": "Information about the control for the field.",
                                            "properties": {
                                                "controlType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "TextBox",
                                                        "ChoiceText",
                                                        "ListBox",
                                                        "CheckBox",
                                                        "ComboBox"
                                                    ]
                                                },
                                                "labelText": {
                                                    "type": "string",
                                                    "description": "The label for the field."
                                                },
                                                "tooltip": {
                                                    "type": "string",
                                                    "description": "The tooltip for the field."
                                                },
                                                "choices": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "The name of the choice."
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "description": "The value of the choice."
                                                            }
                                                        }
                                                    }
                                                },
                                                "multiLine": {
                                                    "type": "boolean",
                                                    "description": "True for a multiline TextBox; otherwise false."
                                                },
                                                "rectangle": {
                                                    "type": "object",
                                                    "description": "Rectangle identified by values in the order of Left, Top, Width, and Height. All values are Pixels with a resolution of 96 dpi in both X and Y direction.",
                                                    "properties": {
                                                        "left": {
                                                            "type": "integer"
                                                        },
                                                        "top": {
                                                            "type": "integer"
                                                        },
                                                        "width": {
                                                            "type": "integer"
                                                        },
                                                        "height": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                },
                                                "labelRectangle": {
                                                    "type": "object",
                                                    "description": "Rectangle identified by values in the order of Left, Top, Width, and Height. All values are Pixels with a resolution of 96 dpi in both X and Y direction.",
                                                    "properties": {
                                                        "left": {
                                                            "type": "integer"
                                                        },
                                                        "top": {
                                                            "type": "integer"
                                                        },
                                                        "width": {
                                                            "type": "integer"
                                                        },
                                                        "height": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "isPopulationTrigger": {
                                            "type": "boolean",
                                            "description": "If true, specifies that this field is a dependent field for one or more population rules in the Document Type definition. This will be false for only one-time rules."
                                        },
                                        "optionsPopulatedBy": {
                                            "type": "array",
                                            "description": "This is an array of string field names that when any of the fields specified changes, then it should cause the valid options for this field to change. This is not applicable for only one-time rules.",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "extractFirstValue": {
                                            "type": "boolean",
                                            "description": "If true, then document level extractions will use values from the first page where a non-empty value is found; otherwise, it will use the field from the last page where a non-empty value is found."
                                        },
                                        "isCalculationTarget": {
                                            "type": "boolean",
                                            "description": "If true, specifies that this field is a data calculation target field. This will be false for only one-time rules."
                                        },
                                        "sampleRect": {
                                            "type": "string",
                                            "description": "Field Sample rectangle indicating field position in an image. A comma separated list of double values for left, top, width and height. All values are in units of 1/96 inch"
                                        },
                                        "samplePageId": {
                                            "type": "string",
                                            "description": "Field sample page id."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "inlineFileRequestBody": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "description": "The file data must be sent as a base64 encoded string."
                    },
                    "contentType": {
                        "type": "string",
                        "enum": [
                            "image/tiff",
                            "application/msword",
                            "application/octet-stream",
                            "application/rtf",
                            "application/pdf",
                            "image/jpeg",
                            "image/png",
                            "text/plain"
                        ],
                        "description": "Optional. The acceptable Content-Type for the file. If not provided, then application/octet-stream will be assumed."
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Optional. Only used for chunking. The offset has to be counted in bytes and is used to add or retry a chunk. Chunks must be added without gaps."
                    }
                }
            },
            "batchItemContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "object",
                        "description": "JSON object representing the content for this entry.",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Batch handle ID only for the current session."
                            },
                            "batchName": {
                                "type": "string",
                                "description": "Not localized. Name of batch given by the creator."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "C",
                                    "P",
                                    "S",
                                    "E"
                                ],
                                "description": "C - Batch created. Caller may add values.\nP - Pending Dispatch. No more changes may be made.\nS - Batch was sent to the server successfully.\nE - Final attempt failed. Batch will not be sent anymore"
                            },
                            "serverBatchId": {
                                "type": "string",
                                "description": "ID created in InputAccel server. Empty if not sent to InputAccel server."
                            },
                            "captureFlow": {
                                "type": "string",
                                "description": "Name of the InputAccel CaptureFlow associated with the batch"
                            },
                            "batchRootLevel": {
                                "type": "integer",
                                "description": "Batch root level"
                            },
                            "batchPriority": {
                                "type": "integer",
                                "description": "batch priority between 1 and 100. default 50."
                            },
                            "lastUpdate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "ISO 8601 date-time string of the last update."
                            },
                            "lastError": {
                                "type": "string",
                                "description": "Last error message."
                            },
                            "localExportFileId": {
                                "type": "string",
                                "description": "Local export (download to local machine) zip file Url."
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "415NotSupported": {
                "description": "Unsupported Media Type",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "returnStatus": {
                                    "$ref": "#/components/schemas/returnStatusBody"
                                }
                            }
                        },
                        "example": {
                            "returnStatus": {
                                "status": 415,
                                "code": "ER8016",
                                "message": "[M8016] The Accept type is not supported for this request.",
                                "server": "WS-Sb29a7dd631e94af5a5439148ea7a5bffHS"
                            }
                        }
                    }
                }
            },
            "403Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/hal+json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "returnStatus": {
                                    "$ref": "#/components/schemas/returnStatusBody"
                                }
                            }
                        },
                        "example": {
                            "returnStatus": {
                                "status": 403,
                                "code": "ER8013",
                                "message": "[M8013] The user does not have sufficient permissions for the operation.",
                                "server": "WS-S5fcb9d7368af42f0af244010e3ad5907HS"
                            }
                        }
                    }
                }
            },
            "200DeleteResponse": {
                "description": "OK",
                "content": {
                    "application/hal+json": {
                        "schema": {
                            "$ref": "#/components/schemas/returnStatusBody"
                        },
                        "example": {
                            "returnStatus": {
                                "status": 200,
                                "code": "OK0000",
                                "message": "",
                                "server": "WS-Sb29a7dd631e94af5a5439148ea7a5bffHS"
                            }
                        }
                    }
                }
            },
            "200FileResponse": {
                "description": "OK or Created",
                "content": {
                    "application/hal+json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "returnStatus": {
                                    "$ref": "#/components/schemas/returnStatusBody"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "The file handle ID in the current session."
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The media type for the file."
                                },
                                "src": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI for direct access to file data."
                                },
                                "updated": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "ISO 8601 date-time string of the last update."
                                }
                            }
                        },
                        "example": {
                            "returnStatus": {
                                "status": 200,
                                "code": "OK0000",
                                "message": "",
                                "server": "WS-S842b1bccd3fd4d2e86b33a844adaf5c1"
                            },
                            "id": "f_128b1931b51643979a2580f5820dec4ftif",
                            "contentType": "image/jpeg",
                            "src": "https://{host}/cp-rest/session/v2/files/f_128b1931b51643979a2580f5820dec4fjpg",
                            "updated": "2016-03-31T22:22:35.1995491Z"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "oAuth": {
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://api.developer.opentext.com/oauth2/token",
                        "scopes": {}
                    }
                },
                "type": "oauth2"
            }
        }
    }
}